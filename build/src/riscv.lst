GAS LISTING /tmp/ccbhHPpc.s 			page 1


   1              		.file	"riscv.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN5Riscv10popSppSpieEv
   9              	_ZN5Riscv10popSppSpieEv:
  10              	.LFB37:
  11              		.file 1 "src/riscv.cpp"
   1:src/riscv.cpp **** #include "../h/riscv.hpp"
   2:src/riscv.cpp **** #include "../lib/console.h"
   3:src/riscv.cpp **** #include "../h/tcb.hpp"
   4:src/riscv.cpp **** #include "../h/print.hpp"
   5:src/riscv.cpp **** 
   6:src/riscv.cpp **** 
   7:src/riscv.cpp **** void Riscv::popSppSpie() {
  12              		.loc 1 7 26
  13              		.cfi_startproc
  14 0000 130101FF 		addi	sp,sp,-16
  15              		.cfi_def_cfa_offset 16
  16 0004 23348100 		sd	s0,8(sp)
  17              		.cfi_offset 8, -8
  18 0008 13040101 		addi	s0,sp,16
  19              		.cfi_def_cfa 8, 0
   8:src/riscv.cpp ****     __asm__ volatile("csrw sepc, ra");
  20              		.loc 1 8 5
  21              		.loc 1 8 38 is_stmt 0
  22              	#APP
  23              	# 8 "src/riscv.cpp" 1
   9              	    __asm__ volatile("sret");
  24              		csrw sepc, ra
  25              	# 0 "" 2
  26              		.loc 1 9 5 is_stmt 1
  27              		.loc 1 9 29 is_stmt 0
  28              	# 9 "src/riscv.cpp" 1
  10              	}
  29              		sret
  30              	# 0 "" 2
  31              		.loc 1 10 1
  32              	#NO_APP
  33 0014 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0018 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 001c 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE37:
  42              		.align	2
  43              		.globl	_ZN5Riscv20handleSupervisorTrapEv
  45              	_ZN5Riscv20handleSupervisorTrapEv:
  46              	.LFB38:
  11:src/riscv.cpp **** 
  12:src/riscv.cpp **** void Riscv::handleSupervisorTrap() {
  47              		.loc 1 12 36 is_stmt 1
  48              		.cfi_startproc
GAS LISTING /tmp/ccbhHPpc.s 			page 2


  49 0020 130101FB 		addi	sp,sp,-80
  50              		.cfi_def_cfa_offset 80
  51 0024 23341104 		sd	ra,72(sp)
  52 0028 23308104 		sd	s0,64(sp)
  53 002c 233C9102 		sd	s1,56(sp)
  54 0030 23382103 		sd	s2,48(sp)
  55              		.cfi_offset 1, -8
  56              		.cfi_offset 8, -16
  57              		.cfi_offset 9, -24
  58              		.cfi_offset 18, -32
  59 0034 13040105 		addi	s0,sp,80
  60              		.cfi_def_cfa 8, 0
  13:src/riscv.cpp ****     uint64 scause = r_scause();
  61              		.loc 1 13 5
  62              	.LBB32:
  63              	.LBB33:
  64              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef riscv_hpp
   2:src/../h/riscv.hpp **** #define riscv_hpp
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** // Vezbe 7
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** class Riscv {
   8:src/../h/riscv.hpp **** public:
   9:src/../h/riscv.hpp ****     static void pushRegisters();
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     static void popRegisters();;
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     static void popSppSpie();//has to be non inline function
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read registre sepc
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read registre stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read registre stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip {
  39:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  40:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
GAS LISTING /tmp/ccbhHPpc.s 			page 3


  41:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  42:src/../h/riscv.hpp ****     };
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
  48:src/../h/riscv.hpp ****     static uint64 r_sip();
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     static void w_sip(uint64 mask);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     enum BitMaskSstatus{
  53:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  54:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  55:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  56:src/../h/riscv.hpp ****     };
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     // mask set register sstatus
  59:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // mask clear register sstatus
  62:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // read register sstatus
  65:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // wrute register sstatus
  68:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     static void supervisorTrap();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp **** private:
  73:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  74:src/../h/riscv.hpp **** };
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  77:src/../h/riscv.hpp ****     uint64 volatile scause;
  65              		.loc 2 77 5
  78:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause" : [scause] "=r"(scause));
  66              		.loc 2 78 5
  67              		.loc 2 78 71 is_stmt 0
  68              	#APP
  69              	# 78 "src/../h/riscv.hpp" 1
  79              	    return scause;
  70              		csrr a5, scause
  71              	# 0 "" 2
  72              	#NO_APP
  73 003c 233CF4FA 		sd	a5,-72(s0)
  74              		.loc 2 79 5 is_stmt 1
  75              		.loc 2 79 12 is_stmt 0
  76 0040 033784FB 		ld	a4,-72(s0)
  77              	.LVL0:
  78              	.LBE33:
  79              	.LBE32:
  14:src/riscv.cpp ****     if (scause == 0x0000000000000009UL) { //ecall
  80              		.loc 1 14 5 is_stmt 1
  81              	.LBB34:
GAS LISTING /tmp/ccbhHPpc.s 			page 4


  82 0044 93079000 		li	a5,9
  83 0048 630EF702 		beq	a4,a5,.L15
  84              	.LBE34:
  15:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; //ecall return to its address
  16:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
  17:src/riscv.cpp ****         TCB::timeSLiceCounter = 0;
  18:src/riscv.cpp ****         if(TCB::running->sleeping > 0) TCB::dispatchSleep();
  19:src/riscv.cpp ****         else TCB::dispatch();
  20:src/riscv.cpp ****         w_sstatus(sstatus);
  21:src/riscv.cpp ****         w_sepc(sepc);
  22:src/riscv.cpp ****     } else if (scause == 0x8000000000000001UL) { //interrupt, supervisor software interrupt (timer)
  85              		.loc 1 22 12
  86              	.LBB65:
  87              	.LBB35:
  88 004c 9307F0FF 		li	a5,-1
  89 0050 9397F703 		slli	a5,a5,63
  90 0054 93871700 		addi	a5,a5,1
  91 0058 6304F708 		beq	a4,a5,.L16
  23:src/riscv.cpp ****         TCB::timeSLiceCounter++;
  24:src/riscv.cpp ****         for (uint64 i = 0; i < Scheduler::getNumOfSleep(); i++)//This won't work if Scheduler is no
  25:src/riscv.cpp ****         { // change from int i to uint64 i
  26:src/riscv.cpp ****             TCB *elem = Scheduler::getSleep();
  27:src/riscv.cpp ****             elem->sleeping--;
  28:src/riscv.cpp ****             if (elem->sleeping > 0)Scheduler::putSleep(elem);
  29:src/riscv.cpp ****             else Scheduler::put(elem);
  30:src/riscv.cpp ****         }
  31:src/riscv.cpp **** 
  32:src/riscv.cpp ****         if (TCB::timeSLiceCounter >= TCB::running->getTimeSlice()) {
  33:src/riscv.cpp ****             uint64 sepc = r_sepc();
  34:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
  35:src/riscv.cpp ****             TCB::timeSLiceCounter = 0;
  36:src/riscv.cpp ****             TCB::dispatch();
  37:src/riscv.cpp ****             w_sstatus(sstatus);
  38:src/riscv.cpp ****             w_sepc(sepc);
  39:src/riscv.cpp ****         }
  40:src/riscv.cpp ****         mc_sip(SIP_SSIP);
  41:src/riscv.cpp **** 
  42:src/riscv.cpp ****     } else if (scause == 0x8000000000000009UL) {//interrupt, supervisor external interrupt (console
  92              		.loc 1 42 12
  93 005c 9307F0FF 		li	a5,-1
  94 0060 9397F703 		slli	a5,a5,63
  95 0064 93879700 		addi	a5,a5,9
  96 0068 630AF712 		beq	a4,a5,.L17
  97              	.LVL1:
  98              	.L3:
  99              	.LBE35:
 100              	.LBE65:
  43:src/riscv.cpp ****         console_handler();
  44:src/riscv.cpp ****     } else { //unexpected trap cause
  45:src/riscv.cpp ****         /*printString("Unexpected trap cause\n");
  46:src/riscv.cpp ****         //print scause
  47:src/riscv.cpp ****         printString("Scause: ");
  48:src/riscv.cpp ****         printInteger(r_scause());
  49:src/riscv.cpp ****         printString("\n");
  50:src/riscv.cpp ****         //print sepc
  51:src/riscv.cpp ****         printString("Sepc: ");
  52:src/riscv.cpp ****         printInteger(r_sepc());
GAS LISTING /tmp/ccbhHPpc.s 			page 5


  53:src/riscv.cpp ****         printString("\n");
  54:src/riscv.cpp ****         //print stval
  55:src/riscv.cpp ****         printString("Stval: ");
  56:src/riscv.cpp ****         printInteger(r_stval());
  57:src/riscv.cpp ****         printString("\n");*/
  58:src/riscv.cpp ****     }
  59:src/riscv.cpp **** }...
 101              		.loc 1 59 1 is_stmt 0
 102 006c 83308104 		ld	ra,72(sp)
 103              		.cfi_remember_state
 104              		.cfi_restore 1
 105 0070 03340104 		ld	s0,64(sp)
 106              		.cfi_restore 8
 107              		.cfi_def_cfa 2, 80
 108 0074 83348103 		ld	s1,56(sp)
 109              		.cfi_restore 9
 110 0078 03390103 		ld	s2,48(sp)
 111              		.cfi_restore 18
 112 007c 13010105 		addi	sp,sp,80
 113              		.cfi_def_cfa_offset 0
 114 0080 67800000 		jr	ra
 115              	.LVL2:
 116              	.L15:
 117              		.cfi_restore_state
 118              	.LBB66:
 119              	.LBB55:
  15:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; //ecall return to its address
 120              		.loc 1 15 9 is_stmt 1
 121              	.LBB56:
 122              	.LBB57:
  80:src/../h/riscv.hpp **** }
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  83:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %[scause]" : : [scause] "r"(scause));
  84:src/../h/riscv.hpp **** }
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
  87:src/../h/riscv.hpp ****     uint64 volatile sepc;
 123              		.loc 2 87 5
  88:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 124              		.loc 2 88 5
 125              		.loc 2 88 63 is_stmt 0
 126              	#APP
 127              	# 88 "src/../h/riscv.hpp" 1
  89              	    return sepc;
 128              		csrr a5, sepc
 129              	# 0 "" 2
 130              	#NO_APP
 131 0088 2334F4FC 		sd	a5,-56(s0)
 132              		.loc 2 89 5 is_stmt 1
 133              		.loc 2 89 12 is_stmt 0
 134 008c 833484FC 		ld	s1,-56(s0)
 135              	.LBE57:
 136              	.LBE56:
  15:src/riscv.cpp ****         uint64 sepc = r_sepc() + 4; //ecall return to its address
 137              		.loc 1 15 34
 138 0090 93844400 		addi	s1,s1,4
GAS LISTING /tmp/ccbhHPpc.s 			page 6


 139              	.LVL3:
  16:src/riscv.cpp ****         uint64 sstatus = r_sstatus();
 140              		.loc 1 16 9 is_stmt 1
 141              	.LBB58:
 142              	.LBB59:
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  93:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
  97:src/../h/riscv.hpp ****     uint64 volatile stvec;
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  99:src/../h/riscv.hpp ****     return stvec;
 100:src/../h/riscv.hpp **** }
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 104:src/../h/riscv.hpp **** }
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval(){
 107:src/../h/riscv.hpp ****     uint64 volatile stval;
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 109:src/../h/riscv.hpp ****     return stval;
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 125:src/../h/riscv.hpp ****     uint64 volatile sip;
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 127:src/../h/riscv.hpp ****     return sip;
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 136:src/../h/riscv.hpp **** }
 137:src/../h/riscv.hpp **** inline void Riscv::mc_sstatus(uint64 mask){
 138:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sstatus, %[mask]" : : [mask] "r"(mask));
 139:src/../h/riscv.hpp **** }
 140:src/../h/riscv.hpp **** inline uint64 Riscv::r_sstatus(){
 141:src/../h/riscv.hpp ****     uint64 volatile sstatus;
GAS LISTING /tmp/ccbhHPpc.s 			page 7


 143              		.loc 2 141 5
 142:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 144              		.loc 2 142 5
 145              		.loc 2 142 76 is_stmt 0
 146              	#APP
 147              	# 142 "src/../h/riscv.hpp" 1
 143              	    return sstatus;
 148              		csrr a5, sstatus
 149              	# 0 "" 2
 150              	#NO_APP
 151 0098 2330F4FC 		sd	a5,-64(s0)
 152              		.loc 2 143 5 is_stmt 1
 153              		.loc 2 143 12 is_stmt 0
 154 009c 033904FC 		ld	s2,-64(s0)
 155              	.LVL4:
 156              	.LBE59:
 157              	.LBE58:
  17:src/riscv.cpp ****         TCB::timeSLiceCounter = 0;
 158              		.loc 1 17 9 is_stmt 1
  17:src/riscv.cpp ****         TCB::timeSLiceCounter = 0;
 159              		.loc 1 17 31 is_stmt 0
 160 00a0 97070000 		la	a5,_ZN3TCB16timeSLiceCounterE
 160      83B70700 
 161 00a8 23B00700 		sd	zero,0(a5)
  18:src/riscv.cpp ****         if(TCB::running->sleeping > 0) TCB::dispatchSleep();
 162              		.loc 1 18 9 is_stmt 1
  18:src/riscv.cpp ****         if(TCB::running->sleeping > 0) TCB::dispatchSleep();
 163              		.loc 1 18 26 is_stmt 0
 164 00ac 97070000 		la	a5,_ZN3TCB7runningE
 164      83B70700 
 165 00b4 83B70700 		ld	a5,0(a5)
 166 00b8 83B70703 		ld	a5,48(a5)
  18:src/riscv.cpp ****         if(TCB::running->sleeping > 0) TCB::dispatchSleep();
 167              		.loc 1 18 9
 168 00bc 638C0700 		beqz	a5,.L5
  18:src/riscv.cpp ****         if(TCB::running->sleeping > 0) TCB::dispatchSleep();
 169              		.loc 1 18 40 is_stmt 1 discriminator 1
  18:src/riscv.cpp ****         if(TCB::running->sleeping > 0) TCB::dispatchSleep();
 170              		.loc 1 18 58 is_stmt 0 discriminator 1
 171 00c0 97000000 		call	_ZN3TCB13dispatchSleepEv@plt
 171      E7800000 
 172              	.LVL5:
 173              	.L6:
  20:src/riscv.cpp ****         w_sstatus(sstatus);
 174              		.loc 1 20 9 is_stmt 1
 175              	.LBB60:
 176              	.LBB61:
 144:src/../h/riscv.hpp **** }
 145:src/../h/riscv.hpp **** inline void Riscv::w_sstatus(uint64 sstatus){
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sstatus, %[sstatus]" : : [sstatus] "r"(sstatus));
 177              		.loc 2 146 5
 178              		.loc 2 146 77 is_stmt 0
 179              	#APP
 180              	# 146 "src/../h/riscv.hpp" 1
 147              	}
 181              		csrw sstatus, s2
 182              	# 0 "" 2
GAS LISTING /tmp/ccbhHPpc.s 			page 8


 183              	.LVL6:
 184              	#NO_APP
 185              	.LBE61:
 186              	.LBE60:
  21:src/riscv.cpp ****         w_sepc(sepc);
 187              		.loc 1 21 9 is_stmt 1
 188              	.LBB62:
 189              	.LBB63:
  93:src/../h/riscv.hpp **** }
 190              		.loc 2 93 5
  93:src/../h/riscv.hpp **** }
 191              		.loc 2 93 65 is_stmt 0
 192              	#APP
 193              	# 93 "src/../h/riscv.hpp" 1
  94:src/../h/riscv.hpp **** 
 194              		csrw sepc, s1
 195              	# 0 "" 2
 196              		.loc 2 94 1
 197              	#NO_APP
 198 00d0 6FF0DFF9 		j	.L3
 199              	.LVL7:
 200              	.L5:
 201              	.LBE63:
 202              	.LBE62:
  19:src/riscv.cpp ****         else TCB::dispatch();
 203              		.loc 1 19 14 is_stmt 1
  19:src/riscv.cpp ****         else TCB::dispatch();
 204              		.loc 1 19 27 is_stmt 0
 205 00d4 97000000 		call	_ZN3TCB8dispatchEv@plt
 205      E7800000 
 206              	.LVL8:
 207 00dc 6FF0DFFE 		j	.L6
 208              	.LVL9:
 209              	.L16:
 210              	.LBE55:
 211              	.LBB64:
 212              	.LBB36:
  23:src/riscv.cpp ****         TCB::timeSLiceCounter++;
 213              		.loc 1 23 9 is_stmt 1
  23:src/riscv.cpp ****         TCB::timeSLiceCounter++;
 214              		.loc 1 23 30 is_stmt 0
 215 00e0 17070000 		la	a4,_ZN3TCB16timeSLiceCounterE
 215      03370700 
 216              	.LVL10:
 217 00e8 83370700 		ld	a5,0(a4)
 218 00ec 93871700 		addi	a5,a5,1
 219 00f0 2330F700 		sd	a5,0(a4)
  24:src/riscv.cpp ****         for (uint64 i = 0; i < Scheduler::getNumOfSleep(); i++)//This won't work if Scheduler is no
 220              		.loc 1 24 9 is_stmt 1
 221              	.LVL11:
 222              	.LBB37:
  24:src/riscv.cpp ****         for (uint64 i = 0; i < Scheduler::getNumOfSleep(); i++)//This won't work if Scheduler is no
 223              		.loc 1 24 21 is_stmt 0
 224 00f4 93040000 		li	s1,0
 225 00f8 6F000001 		j	.L12
 226              	.LVL12:
 227              	.L10:
GAS LISTING /tmp/ccbhHPpc.s 			page 9


 228              	.LBB38:
  29:src/riscv.cpp ****             else Scheduler::put(elem);
 229              		.loc 1 29 18 is_stmt 1
  29:src/riscv.cpp ****             else Scheduler::put(elem);
 230              		.loc 1 29 32 is_stmt 0
 231 00fc 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 231      E7800000 
 232              	.LVL13:
 233              	.L11:
 234              	.LBE38:
  24:src/riscv.cpp ****         for (uint64 i = 0; i < Scheduler::getNumOfSleep(); i++)//This won't work if Scheduler is no
 235              		.loc 1 24 9 is_stmt 1 discriminator 2
 236 0104 93841400 		addi	s1,s1,1
 237              	.LVL14:
 238              	.L12:
  24:src/riscv.cpp ****         for (uint64 i = 0; i < Scheduler::getNumOfSleep(); i++)//This won't work if Scheduler is no
 239              		.loc 1 24 30 discriminator 1
  24:src/riscv.cpp ****         for (uint64 i = 0; i < Scheduler::getNumOfSleep(); i++)//This won't work if Scheduler is no
 240              		.loc 1 24 56 is_stmt 0 discriminator 1
 241 0108 97000000 		call	_ZN9Scheduler13getNumOfSleepEv@plt
 241      E7800000 
 242              	.LVL15:
  24:src/riscv.cpp ****         for (uint64 i = 0; i < Scheduler::getNumOfSleep(); i++)//This won't work if Scheduler is no
 243              		.loc 1 24 30 discriminator 1
 244 0110 63F4A402 		bgeu	s1,a0,.L9
 245              	.LBB39:
  26:src/riscv.cpp ****             TCB *elem = Scheduler::getSleep();
 246              		.loc 1 26 13 is_stmt 1
  26:src/riscv.cpp ****             TCB *elem = Scheduler::getSleep();
 247              		.loc 1 26 44 is_stmt 0
 248 0114 97000000 		call	_ZN9Scheduler8getSleepEv@plt
 248      E7800000 
 249              	.LVL16:
  27:src/riscv.cpp ****             elem->sleeping--;
 250              		.loc 1 27 13 is_stmt 1
  27:src/riscv.cpp ****             elem->sleeping--;
 251              		.loc 1 27 19 is_stmt 0
 252 011c 83370503 		ld	a5,48(a0)
  27:src/riscv.cpp ****             elem->sleeping--;
 253              		.loc 1 27 27
 254 0120 9387F7FF 		addi	a5,a5,-1
 255 0124 2338F502 		sd	a5,48(a0)
  28:src/riscv.cpp ****             if (elem->sleeping > 0)Scheduler::putSleep(elem);
 256              		.loc 1 28 13 is_stmt 1
 257 0128 E38A07FC 		beqz	a5,.L10
  28:src/riscv.cpp ****             if (elem->sleeping > 0)Scheduler::putSleep(elem);
 258              		.loc 1 28 36 discriminator 1
  28:src/riscv.cpp ****             if (elem->sleeping > 0)Scheduler::putSleep(elem);
 259              		.loc 1 28 55 is_stmt 0 discriminator 1
 260 012c 97000000 		call	_ZN9Scheduler8putSleepEP3TCB@plt
 260      E7800000 
 261              	.LVL17:
 262 0134 6FF01FFD 		j	.L11
 263              	.L9:
 264              	.LBE39:
 265              	.LBE37:
  32:src/riscv.cpp ****         if (TCB::timeSLiceCounter >= TCB::running->getTimeSlice()) {
GAS LISTING /tmp/ccbhHPpc.s 			page 10


 266              		.loc 1 32 9 is_stmt 1
 267              	.LBB40:
  32:src/riscv.cpp ****         if (TCB::timeSLiceCounter >= TCB::running->getTimeSlice()) {
 268              		.loc 1 32 64 is_stmt 0
 269 0138 97070000 		la	a5,_ZN3TCB7runningE
 269      83B70700 
 270 0140 83B70700 		ld	a5,0(a5)
 271              	.LVL18:
 272              	.LBB41:
 273              	.LBB42:
 274              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef cbb_hpp
   2:src/../h/tcb.hpp **** #define cbb_hpp
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
   6:src/../h/tcb.hpp **** // Vezbe 7
   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** class TCB {
   9:src/../h/tcb.hpp **** private:
  10:src/../h/tcb.hpp ****     using Body = void (*)();
  11:src/../h/tcb.hpp ****     struct Context {
  12:src/../h/tcb.hpp ****         uint64 ra;
  13:src/../h/tcb.hpp ****         uint64 sp;
  14:src/../h/tcb.hpp ****     };
  15:src/../h/tcb.hpp ****     Body body;
  16:src/../h/tcb.hpp ****     uint64 *stack;
  17:src/../h/tcb.hpp ****     Context context;
  18:src/../h/tcb.hpp ****     uint64 timeSlice;
  19:src/../h/tcb.hpp ****     bool finished;
  20:src/../h/tcb.hpp ****     uint64 sleeping = 0;
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     static uint64 timeSLiceCounter;
  23:src/../h/tcb.hpp ****     static uint64 constexpr STACK_SIZE = 1024;
  24:src/../h/tcb.hpp ****     static uint64 constexpr TIME_SLICE = 2;
  25:src/../h/tcb.hpp **** public:
  26:src/../h/tcb.hpp ****     //using Body = void (*)();
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     static TCB *createThread(Body body);
  29:src/../h/tcb.hpp ****     static TCB *createIdleThread(Body body);
  30:src/../h/tcb.hpp **** 
  31:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
  32:src/../h/tcb.hpp ****     void setFinished(bool f) { TCB::finished = f; }
  33:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
 275              		.loc 3 33 35 is_stmt 1
 276              		.loc 3 33 42 is_stmt 0
 277 0144 83B70702 		ld	a5,32(a5)
 278              	.LVL19:
 279              	.LBE42:
 280              	.LBE41:
  32:src/riscv.cpp ****         if (TCB::timeSLiceCounter >= TCB::running->getTimeSlice()) {
 281              		.loc 1 32 35
 282 0148 17070000 		la	a4,_ZN3TCB16timeSLiceCounterE
 282      03370700 
 283 0150 03370700 		ld	a4,0(a4)
  32:src/riscv.cpp ****         if (TCB::timeSLiceCounter >= TCB::running->getTimeSlice()) {
 284              		.loc 1 32 9
GAS LISTING /tmp/ccbhHPpc.s 			page 11


 285 0154 6378F700 		bgeu	a4,a5,.L18
 286              	.LVL20:
 287              	.L13:
 288              	.LBE40:
  40:src/riscv.cpp ****         mc_sip(SIP_SSIP);
 289              		.loc 1 40 9 is_stmt 1
 290              	.LBB52:
 291              	.LBB53:
 121:src/../h/riscv.hpp **** }
 292              		.loc 2 121 5
 121:src/../h/riscv.hpp **** }
 293              		.loc 2 121 64 is_stmt 0
 294 0158 93072000 		li	a5,2
 295              	#APP
 296              	# 121 "src/../h/riscv.hpp" 1
 122:src/../h/riscv.hpp **** 
 297              		csrc sip, a5
 298              	# 0 "" 2
 299              		.loc 2 122 1
 300              	#NO_APP
 301 0160 6FF0DFF0 		j	.L3
 302              	.LVL21:
 303              	.L18:
 304              	.LBE53:
 305              	.LBE52:
 306              	.LBB54:
 307              	.LBB43:
  33:src/riscv.cpp ****             uint64 sepc = r_sepc();
 308              		.loc 1 33 13 is_stmt 1
 309              	.LBB44:
 310              	.LBB45:
  87:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 311              		.loc 2 87 5
  88:src/../h/riscv.hpp ****     return sepc;
 312              		.loc 2 88 5
  88:src/../h/riscv.hpp ****     return sepc;
 313              		.loc 2 88 63 is_stmt 0
 314              	#APP
 315              	# 88 "src/../h/riscv.hpp" 1
 316              		csrr a5, sepc
 317              	# 0 "" 2
 318              	#NO_APP
 319 0168 233CF4FC 		sd	a5,-40(s0)
  89:src/../h/riscv.hpp **** }
 320              		.loc 2 89 5 is_stmt 1
  89:src/../h/riscv.hpp **** }
 321              		.loc 2 89 12 is_stmt 0
 322 016c 833484FD 		ld	s1,-40(s0)
 323              	.LVL22:
 324              	.LBE45:
 325              	.LBE44:
  34:src/riscv.cpp ****             uint64 sstatus = r_sstatus();
 326              		.loc 1 34 13 is_stmt 1
 327              	.LBB46:
 328              	.LBB47:
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sstatus], sstatus" : [sstatus] "=r"(sstatus));
 329              		.loc 2 141 5
GAS LISTING /tmp/ccbhHPpc.s 			page 12


 142:src/../h/riscv.hpp ****     return sstatus;
 330              		.loc 2 142 5
 142:src/../h/riscv.hpp ****     return sstatus;
 331              		.loc 2 142 76 is_stmt 0
 332              	#APP
 333              	# 142 "src/../h/riscv.hpp" 1
 334              		csrr a5, sstatus
 335              	# 0 "" 2
 336              	#NO_APP
 337 0174 2338F4FC 		sd	a5,-48(s0)
 143:src/../h/riscv.hpp **** }
 338              		.loc 2 143 5 is_stmt 1
 143:src/../h/riscv.hpp **** }
 339              		.loc 2 143 12 is_stmt 0
 340 0178 033904FD 		ld	s2,-48(s0)
 341              	.LVL23:
 342              	.LBE47:
 343              	.LBE46:
  35:src/riscv.cpp ****             TCB::timeSLiceCounter = 0;
 344              		.loc 1 35 13 is_stmt 1
  35:src/riscv.cpp ****             TCB::timeSLiceCounter = 0;
 345              		.loc 1 35 35 is_stmt 0
 346 017c 97070000 		la	a5,_ZN3TCB16timeSLiceCounterE
 346      83B70700 
 347 0184 23B00700 		sd	zero,0(a5)
  36:src/riscv.cpp ****             TCB::dispatch();
 348              		.loc 1 36 13 is_stmt 1
  36:src/riscv.cpp ****             TCB::dispatch();
 349              		.loc 1 36 26 is_stmt 0
 350 0188 97000000 		call	_ZN3TCB8dispatchEv@plt
 350      E7800000 
 351              	.LVL24:
  37:src/riscv.cpp ****             w_sstatus(sstatus);
 352              		.loc 1 37 13 is_stmt 1
 353              	.LBB48:
 354              	.LBB49:
 146:src/../h/riscv.hpp **** }
 355              		.loc 2 146 5
 146:src/../h/riscv.hpp **** }
 356              		.loc 2 146 77 is_stmt 0
 357              	#APP
 358              	# 146 "src/../h/riscv.hpp" 1
 359              		csrw sstatus, s2
 360              	# 0 "" 2
 361              	.LVL25:
 362              	#NO_APP
 363              	.LBE49:
 364              	.LBE48:
  38:src/riscv.cpp ****             w_sepc(sepc);
 365              		.loc 1 38 13 is_stmt 1
 366              	.LBB50:
 367              	.LBB51:
  93:src/../h/riscv.hpp **** }
 368              		.loc 2 93 5
  93:src/../h/riscv.hpp **** }
 369              		.loc 2 93 65 is_stmt 0
 370              	#APP
GAS LISTING /tmp/ccbhHPpc.s 			page 13


 371              	# 93 "src/../h/riscv.hpp" 1
  94:src/../h/riscv.hpp **** 
 372              		csrw sepc, s1
 373              	# 0 "" 2
 374              		.loc 2 94 1
 375              	#NO_APP
 376 0198 6FF01FFC 		j	.L13
 377              	.LVL26:
 378              	.L17:
 379              	.LBE51:
 380              	.LBE50:
 381              	.LBE43:
 382              	.LBE54:
 383              	.LBE36:
  43:src/riscv.cpp ****         console_handler();
 384              		.loc 1 43 9 is_stmt 1
  43:src/riscv.cpp ****         console_handler();
 385              		.loc 1 43 24 is_stmt 0
 386 019c 97000000 		call	console_handler@plt
 386      E7800000 
 387              	.LVL27:
 388              	.LBE64:
 389              	.LBE66:
 390              		.loc 1 59 1
 391 01a4 6FF09FEC 		j	.L3
 392              		.cfi_endproc
 393              	.LFE38:
 395              	.Letext0:
 396              		.file 4 "src/../h/../lib/hw.h"
 397              		.file 5 "src/../h/scheduler.hpp"
 398              		.file 6 "src/../lib/console.h"
GAS LISTING /tmp/ccbhHPpc.s 			page 14


DEFINED SYMBOLS
                            *ABS*:0000000000000000 riscv.cpp
     /tmp/ccbhHPpc.s:9      .text:0000000000000000 _ZN5Riscv10popSppSpieEv
     /tmp/ccbhHPpc.s:13     .text:0000000000000000 .L0 
     /tmp/ccbhHPpc.s:14     .text:0000000000000000 .L0 
     /tmp/ccbhHPpc.s:15     .text:0000000000000004 .L0 
     /tmp/ccbhHPpc.s:17     .text:0000000000000008 .L0 
     /tmp/ccbhHPpc.s:19     .text:000000000000000c .L0 
     /tmp/ccbhHPpc.s:21     .text:000000000000000c .L0 
       src/riscv.cpp:8      .text:000000000000000c .L0 
     /tmp/ccbhHPpc.s:27     .text:0000000000000010 .L0 
       src/riscv.cpp:9      .text:0000000000000010 .L0 
     /tmp/ccbhHPpc.s:33     .text:0000000000000014 .L0 
     /tmp/ccbhHPpc.s:34     .text:0000000000000018 .L0 
     /tmp/ccbhHPpc.s:35     .text:0000000000000018 .L0 
     /tmp/ccbhHPpc.s:37     .text:000000000000001c .L0 
     /tmp/ccbhHPpc.s:39     .text:0000000000000020 .L0 
     /tmp/ccbhHPpc.s:45     .text:0000000000000020 _ZN5Riscv20handleSupervisorTrapEv
     /tmp/ccbhHPpc.s:48     .text:0000000000000020 .L0 
     /tmp/ccbhHPpc.s:49     .text:0000000000000020 .L0 
     /tmp/ccbhHPpc.s:50     .text:0000000000000024 .L0 
     /tmp/ccbhHPpc.s:55     .text:0000000000000034 .L0 
     /tmp/ccbhHPpc.s:56     .text:0000000000000034 .L0 
     /tmp/ccbhHPpc.s:57     .text:0000000000000034 .L0 
     /tmp/ccbhHPpc.s:58     .text:0000000000000034 .L0 
     /tmp/ccbhHPpc.s:60     .text:0000000000000038 .L0 
     /tmp/ccbhHPpc.s:65     .text:0000000000000038 .L0 
     /tmp/ccbhHPpc.s:66     .text:0000000000000038 .L0 
     /tmp/ccbhHPpc.s:67     .text:0000000000000038 .L0 
  src/../h/riscv.hpp:78     .text:0000000000000038 .L0 
     /tmp/ccbhHPpc.s:75     .text:0000000000000040 .L0 
     /tmp/ccbhHPpc.s:76     .text:0000000000000040 .L0 
     /tmp/ccbhHPpc.s:82     .text:0000000000000044 .L0 
     /tmp/ccbhHPpc.s:88     .text:000000000000004c .L0 
     /tmp/ccbhHPpc.s:93     .text:000000000000005c .L0 
     /tmp/ccbhHPpc.s:102    .text:000000000000006c .L0 
     /tmp/ccbhHPpc.s:103    .text:0000000000000070 .L0 
     /tmp/ccbhHPpc.s:104    .text:0000000000000070 .L0 
     /tmp/ccbhHPpc.s:106    .text:0000000000000074 .L0 
     /tmp/ccbhHPpc.s:107    .text:0000000000000074 .L0 
     /tmp/ccbhHPpc.s:109    .text:0000000000000078 .L0 
     /tmp/ccbhHPpc.s:111    .text:000000000000007c .L0 
     /tmp/ccbhHPpc.s:113    .text:0000000000000080 .L0 
     /tmp/ccbhHPpc.s:117    .text:0000000000000084 .L0 
     /tmp/ccbhHPpc.s:123    .text:0000000000000084 .L0 
     /tmp/ccbhHPpc.s:124    .text:0000000000000084 .L0 
     /tmp/ccbhHPpc.s:125    .text:0000000000000084 .L0 
  src/../h/riscv.hpp:88     .text:0000000000000084 .L0 
     /tmp/ccbhHPpc.s:133    .text:000000000000008c .L0 
     /tmp/ccbhHPpc.s:134    .text:000000000000008c .L0 
     /tmp/ccbhHPpc.s:138    .text:0000000000000090 .L0 
     /tmp/ccbhHPpc.s:143    .text:0000000000000094 .L0 
     /tmp/ccbhHPpc.s:144    .text:0000000000000094 .L0 
     /tmp/ccbhHPpc.s:145    .text:0000000000000094 .L0 
  src/../h/riscv.hpp:142    .text:0000000000000094 .L0 
     /tmp/ccbhHPpc.s:153    .text:000000000000009c .L0 
     /tmp/ccbhHPpc.s:154    .text:000000000000009c .L0 
GAS LISTING /tmp/ccbhHPpc.s 			page 15


     /tmp/ccbhHPpc.s:159    .text:00000000000000a0 .L0 
     /tmp/ccbhHPpc.s:160    .text:00000000000000a0 .L0 
     /tmp/ccbhHPpc.s:163    .text:00000000000000ac .L0 
     /tmp/ccbhHPpc.s:164    .text:00000000000000ac .L0 
     /tmp/ccbhHPpc.s:168    .text:00000000000000bc .L0 
     /tmp/ccbhHPpc.s:170    .text:00000000000000c0 .L0 
     /tmp/ccbhHPpc.s:171    .text:00000000000000c0 .L0 
     /tmp/ccbhHPpc.s:177    .text:00000000000000c8 .L0 
     /tmp/ccbhHPpc.s:178    .text:00000000000000c8 .L0 
  src/../h/riscv.hpp:146    .text:00000000000000c8 .L0 
     /tmp/ccbhHPpc.s:190    .text:00000000000000cc .L0 
     /tmp/ccbhHPpc.s:191    .text:00000000000000cc .L0 
  src/../h/riscv.hpp:93     .text:00000000000000cc .L0 
     /tmp/ccbhHPpc.s:198    .text:00000000000000d0 .L0 
     /tmp/ccbhHPpc.s:204    .text:00000000000000d4 .L0 
     /tmp/ccbhHPpc.s:205    .text:00000000000000d4 .L0 
     /tmp/ccbhHPpc.s:214    .text:00000000000000e0 .L0 
     /tmp/ccbhHPpc.s:215    .text:00000000000000e0 .L0 
     /tmp/ccbhHPpc.s:223    .text:00000000000000f4 .L0 
     /tmp/ccbhHPpc.s:224    .text:00000000000000f4 .L0 
     /tmp/ccbhHPpc.s:230    .text:00000000000000fc .L0 
     /tmp/ccbhHPpc.s:231    .text:00000000000000fc .L0 
     /tmp/ccbhHPpc.s:236    .text:0000000000000104 .L0 
     /tmp/ccbhHPpc.s:240    .text:0000000000000108 .L0 
     /tmp/ccbhHPpc.s:241    .text:0000000000000108 .L0 
     /tmp/ccbhHPpc.s:244    .text:0000000000000110 .L0 
     /tmp/ccbhHPpc.s:247    .text:0000000000000114 .L0 
     /tmp/ccbhHPpc.s:248    .text:0000000000000114 .L0 
     /tmp/ccbhHPpc.s:251    .text:000000000000011c .L0 
     /tmp/ccbhHPpc.s:252    .text:000000000000011c .L0 
     /tmp/ccbhHPpc.s:254    .text:0000000000000120 .L0 
     /tmp/ccbhHPpc.s:257    .text:0000000000000128 .L0 
     /tmp/ccbhHPpc.s:259    .text:000000000000012c .L0 
     /tmp/ccbhHPpc.s:260    .text:000000000000012c .L0 
     /tmp/ccbhHPpc.s:268    .text:0000000000000138 .L0 
     /tmp/ccbhHPpc.s:269    .text:0000000000000138 .L0 
     /tmp/ccbhHPpc.s:276    .text:0000000000000144 .L0 
     /tmp/ccbhHPpc.s:277    .text:0000000000000144 .L0 
     /tmp/ccbhHPpc.s:282    .text:0000000000000148 .L0 
     /tmp/ccbhHPpc.s:285    .text:0000000000000154 .L0 
     /tmp/ccbhHPpc.s:292    .text:0000000000000158 .L0 
     /tmp/ccbhHPpc.s:293    .text:0000000000000158 .L0 
     /tmp/ccbhHPpc.s:294    .text:0000000000000158 .L0 
     /tmp/ccbhHPpc.s:301    .text:0000000000000160 .L0 
     /tmp/ccbhHPpc.s:311    .text:0000000000000164 .L0 
     /tmp/ccbhHPpc.s:312    .text:0000000000000164 .L0 
     /tmp/ccbhHPpc.s:313    .text:0000000000000164 .L0 
  src/../h/riscv.hpp:88     .text:0000000000000164 .L0 
     /tmp/ccbhHPpc.s:321    .text:000000000000016c .L0 
     /tmp/ccbhHPpc.s:322    .text:000000000000016c .L0 
     /tmp/ccbhHPpc.s:329    .text:0000000000000170 .L0 
     /tmp/ccbhHPpc.s:330    .text:0000000000000170 .L0 
     /tmp/ccbhHPpc.s:331    .text:0000000000000170 .L0 
  src/../h/riscv.hpp:142    .text:0000000000000170 .L0 
     /tmp/ccbhHPpc.s:339    .text:0000000000000178 .L0 
     /tmp/ccbhHPpc.s:340    .text:0000000000000178 .L0 
     /tmp/ccbhHPpc.s:345    .text:000000000000017c .L0 
GAS LISTING /tmp/ccbhHPpc.s 			page 16


     /tmp/ccbhHPpc.s:346    .text:000000000000017c .L0 
     /tmp/ccbhHPpc.s:349    .text:0000000000000188 .L0 
     /tmp/ccbhHPpc.s:350    .text:0000000000000188 .L0 
     /tmp/ccbhHPpc.s:355    .text:0000000000000190 .L0 
     /tmp/ccbhHPpc.s:356    .text:0000000000000190 .L0 
  src/../h/riscv.hpp:146    .text:0000000000000190 .L0 
     /tmp/ccbhHPpc.s:368    .text:0000000000000194 .L0 
     /tmp/ccbhHPpc.s:369    .text:0000000000000194 .L0 
  src/../h/riscv.hpp:93     .text:0000000000000194 .L0 
     /tmp/ccbhHPpc.s:376    .text:0000000000000198 .L0 
     /tmp/ccbhHPpc.s:385    .text:000000000000019c .L0 
     /tmp/ccbhHPpc.s:386    .text:000000000000019c .L0 
     /tmp/ccbhHPpc.s:391    .text:00000000000001a4 .L0 
     /tmp/ccbhHPpc.s:392    .text:00000000000001a8 .L0 
     /tmp/ccbhHPpc.s:399    .text:00000000000001a8 .L0 
     /tmp/ccbhHPpc.s:160    .text:00000000000000a0 .L0 
     /tmp/ccbhHPpc.s:164    .text:00000000000000ac .L0 
     /tmp/ccbhHPpc.s:215    .text:00000000000000e0 .L0 
     /tmp/ccbhHPpc.s:269    .text:0000000000000138 .L0 
     /tmp/ccbhHPpc.s:282    .text:0000000000000148 .L0 
     /tmp/ccbhHPpc.s:346    .text:000000000000017c .L0 
     /tmp/ccbhHPpc.s:116    .text:0000000000000084 .L15
     /tmp/ccbhHPpc.s:209    .text:00000000000000e0 .L16
     /tmp/ccbhHPpc.s:378    .text:000000000000019c .L17
     /tmp/ccbhHPpc.s:200    .text:00000000000000d4 .L5
     /tmp/ccbhHPpc.s:98     .text:000000000000006c .L3
     /tmp/ccbhHPpc.s:173    .text:00000000000000c8 .L6
     /tmp/ccbhHPpc.s:238    .text:0000000000000108 .L12
     /tmp/ccbhHPpc.s:263    .text:0000000000000138 .L9
     /tmp/ccbhHPpc.s:227    .text:00000000000000fc .L10
     /tmp/ccbhHPpc.s:233    .text:0000000000000104 .L11
     /tmp/ccbhHPpc.s:303    .text:0000000000000164 .L18
     /tmp/ccbhHPpc.s:287    .text:0000000000000158 .L13
     /tmp/ccbhHPpc.s:1479   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccbhHPpc.s:2707   .debug_str:0000000000000623 .LASF119
     /tmp/ccbhHPpc.s:2653   .debug_str:000000000000049c .LASF120
     /tmp/ccbhHPpc.s:2693   .debug_str:00000000000005ad .LASF121
     /tmp/ccbhHPpc.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccbhHPpc.s:395    .text:00000000000001a8 .Letext0
     /tmp/ccbhHPpc.s:2487   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccbhHPpc.s:2629   .debug_str:0000000000000423 .LASF0
     /tmp/ccbhHPpc.s:2649   .debug_str:0000000000000476 .LASF1
     /tmp/ccbhHPpc.s:2615   .debug_str:00000000000003d1 .LASF2
     /tmp/ccbhHPpc.s:2585   .debug_str:0000000000000300 .LASF4
     /tmp/ccbhHPpc.s:2685   .debug_str:0000000000000566 .LASF3
     /tmp/ccbhHPpc.s:2515   .debug_str:00000000000000a4 .LASF5
     /tmp/ccbhHPpc.s:2537   .debug_str:0000000000000167 .LASF6
     /tmp/ccbhHPpc.s:2651   .debug_str:0000000000000489 .LASF7
     /tmp/ccbhHPpc.s:2627   .debug_str:0000000000000410 .LASF8
     /tmp/ccbhHPpc.s:2715   .debug_str:000000000000071d .LASF9
     /tmp/ccbhHPpc.s:2571   .debug_str:000000000000026e .LASF10
     /tmp/ccbhHPpc.s:2663   .debug_str:00000000000004d9 .LASF11
     /tmp/ccbhHPpc.s:2709   .debug_str:00000000000006e7 .LASF12
     /tmp/ccbhHPpc.s:2517   .debug_str:00000000000000ab .LASF13
     /tmp/ccbhHPpc.s:2493   .debug_str:0000000000000022 .LASF14
     /tmp/ccbhHPpc.s:2527   .debug_str:000000000000010d .LASF15
     /tmp/ccbhHPpc.s:2677   .debug_str:0000000000000528 .LASF16
GAS LISTING /tmp/ccbhHPpc.s 			page 17


     /tmp/ccbhHPpc.s:2533   .debug_str:000000000000013d .LASF17
     /tmp/ccbhHPpc.s:2645   .debug_str:0000000000000465 .LASF61
     /tmp/ccbhHPpc.s:2597   .debug_str:0000000000000348 .LASF122
     /tmp/ccbhHPpc.s:2695   .debug_str:00000000000005c8 .LASF18
     /tmp/ccbhHPpc.s:2643   .debug_str:000000000000045c .LASF19
     /tmp/ccbhHPpc.s:2591   .debug_str:0000000000000315 .LASF20
     /tmp/ccbhHPpc.s:2509   .debug_str:0000000000000075 .LASF21
     /tmp/ccbhHPpc.s:2547   .debug_str:00000000000001b0 .LASF23
     /tmp/ccbhHPpc.s:2697   .debug_str:00000000000005d1 .LASF22
     /tmp/ccbhHPpc.s:2491   .debug_str:0000000000000008 .LASF24
     /tmp/ccbhHPpc.s:2675   .debug_str:000000000000051d .LASF25
     /tmp/ccbhHPpc.s:2737   .debug_str:00000000000007e7 .LASF26
     /tmp/ccbhHPpc.s:2495   .debug_str:0000000000000032 .LASF27
     /tmp/ccbhHPpc.s:2551   .debug_str:00000000000001d3 .LASF29
     /tmp/ccbhHPpc.s:2545   .debug_str:00000000000001a7 .LASF31
     /tmp/ccbhHPpc.s:2543   .debug_str:0000000000000192 .LASF33
     /tmp/ccbhHPpc.s:2687   .debug_str:0000000000000578 .LASF28
     /tmp/ccbhHPpc.s:2667   .debug_str:00000000000004f1 .LASF30
     /tmp/ccbhHPpc.s:2705   .debug_str:000000000000061c .LASF32
     /tmp/ccbhHPpc.s:2699   .debug_str:00000000000005de .LASF34
     /tmp/ccbhHPpc.s:2563   .debug_str:0000000000000238 .LASF35
     /tmp/ccbhHPpc.s:2535   .debug_str:0000000000000153 .LASF36
     /tmp/ccbhHPpc.s:2489   .debug_str:0000000000000000 .LASF37
     /tmp/ccbhHPpc.s:2577   .debug_str:00000000000002a3 .LASF38
     /tmp/ccbhHPpc.s:2513   .debug_str:000000000000009c .LASF39
     /tmp/ccbhHPpc.s:2519   .debug_str:00000000000000bb .LASF40
     /tmp/ccbhHPpc.s:2741   .debug_str:000000000000080a .LASF41
     /tmp/ccbhHPpc.s:2553   .debug_str:00000000000001e8 .LASF42
     /tmp/ccbhHPpc.s:2631   .debug_str:0000000000000430 .LASF43
     /tmp/ccbhHPpc.s:2733   .debug_str:00000000000007cf .LASF44
     /tmp/ccbhHPpc.s:2505   .debug_str:000000000000005c .LASF45
     /tmp/ccbhHPpc.s:2561   .debug_str:0000000000000225 .LASF46
     /tmp/ccbhHPpc.s:2567   .debug_str:0000000000000251 .LASF47
     /tmp/ccbhHPpc.s:2703   .debug_str:000000000000060a .LASF48
     /tmp/ccbhHPpc.s:2503   .debug_str:0000000000000056 .LASF49
     /tmp/ccbhHPpc.s:2747   .debug_str:000000000000082e .LASF50
     /tmp/ccbhHPpc.s:2739   .debug_str:00000000000007ff .LASF51
     /tmp/ccbhHPpc.s:2683   .debug_str:000000000000054e .LASF52
     /tmp/ccbhHPpc.s:2647   .debug_str:000000000000046b .LASF53
     /tmp/ccbhHPpc.s:2603   .debug_str:000000000000036c .LASF54
     /tmp/ccbhHPpc.s:2525   .debug_str:0000000000000103 .LASF55
     /tmp/ccbhHPpc.s:2581   .debug_str:00000000000002c2 .LASF56
     /tmp/ccbhHPpc.s:2621   .debug_str:00000000000003f1 .LASF57
     /tmp/ccbhHPpc.s:2575   .debug_str:000000000000028d .LASF58
     /tmp/ccbhHPpc.s:2691   .debug_str:000000000000059e .LASF59
     /tmp/ccbhHPpc.s:2521   .debug_str:00000000000000cf .LASF60
     /tmp/ccbhHPpc.s:2723   .debug_str:000000000000076f .LASF109
     /tmp/ccbhHPpc.s:2595   .debug_str:0000000000000326 .LASF111
     /tmp/ccbhHPpc.s:2659   .debug_str:00000000000004c6 .LASF62
     /tmp/ccbhHPpc.s:2559   .debug_str:0000000000000214 .LASF63
     /tmp/ccbhHPpc.s:2657   .debug_str:00000000000004b5 .LASF64
     /tmp/ccbhHPpc.s:2641   .debug_str:0000000000000455 .LASF65
     /tmp/ccbhHPpc.s:2541   .debug_str:000000000000017e .LASF123
     /tmp/ccbhHPpc.s:2523   .debug_str:00000000000000eb .LASF106
     /tmp/ccbhHPpc.s:2719   .debug_str:000000000000074a .LASF66
     /tmp/ccbhHPpc.s:2701   .debug_str:00000000000005f1 .LASF67
     /tmp/ccbhHPpc.s:2661   .debug_str:00000000000004d0 .LASF68
GAS LISTING /tmp/ccbhHPpc.s 			page 18


     /tmp/ccbhHPpc.s:2717   .debug_str:000000000000072d .LASF69
     /tmp/ccbhHPpc.s:2711   .debug_str:00000000000006f6 .LASF70
     /tmp/ccbhHPpc.s:2689   .debug_str:000000000000057f .LASF71
     /tmp/ccbhHPpc.s:2625   .debug_str:000000000000040b .LASF104
     /tmp/ccbhHPpc.s:2605   .debug_str:0000000000000384 .LASF124
     /tmp/ccbhHPpc.s:2499   .debug_str:0000000000000042 .LASF125
     /tmp/ccbhHPpc.s:2673   .debug_str:0000000000000518 .LASF72
     /tmp/ccbhHPpc.s:2589   .debug_str:0000000000000310 .LASF73
     /tmp/ccbhHPpc.s:2635   .debug_str:0000000000000440 .LASF74
     /tmp/ccbhHPpc.s:2593   .debug_str:000000000000031e .LASF75
     /tmp/ccbhHPpc.s:2639   .debug_str:000000000000044b .LASF76
     /tmp/ccbhHPpc.s:2587   .debug_str:0000000000000307 .LASF77
     /tmp/ccbhHPpc.s:2665   .debug_str:00000000000004e8 .LASF78
     /tmp/ccbhHPpc.s:2613   .debug_str:00000000000003c0 .LASF79
     /tmp/ccbhHPpc.s:2599   .debug_str:0000000000000353 .LASF80
     /tmp/ccbhHPpc.s:2579   .debug_str:00000000000002b7 .LASF81
     /tmp/ccbhHPpc.s:2531   .debug_str:0000000000000130 .LASF82
     /tmp/ccbhHPpc.s:2721   .debug_str:0000000000000753 .LASF84
     /tmp/ccbhHPpc.s:2573   .debug_str:000000000000027c .LASF83
     /tmp/ccbhHPpc.s:2607   .debug_str:000000000000038e .LASF85
     /tmp/ccbhHPpc.s:2655   .debug_str:00000000000004aa .LASF88
     /tmp/ccbhHPpc.s:2569   .debug_str:0000000000000257 .LASF90
     /tmp/ccbhHPpc.s:2617   .debug_str:00000000000003df .LASF86
     /tmp/ccbhHPpc.s:2743   .debug_str:0000000000000812 .LASF87
     /tmp/ccbhHPpc.s:2609   .debug_str:00000000000003ae .LASF89
     /tmp/ccbhHPpc.s:2511   .debug_str:0000000000000083 .LASF91
     /tmp/ccbhHPpc.s:2501   .debug_str:000000000000004a .LASF92
     /tmp/ccbhHPpc.s:2529   .debug_str:0000000000000119 .LASF93
     /tmp/ccbhHPpc.s:2679   .debug_str:000000000000053e .LASF94
     /tmp/ccbhHPpc.s:2729   .debug_str:00000000000007ab .LASF95
     /tmp/ccbhHPpc.s:2633   .debug_str:0000000000000437 .LASF96
     /tmp/ccbhHPpc.s:2555   .debug_str:00000000000001fc .LASF97
     /tmp/ccbhHPpc.s:2731   .debug_str:00000000000007c1 .LASF98
     /tmp/ccbhHPpc.s:2713   .debug_str:0000000000000704 .LASF99
     /tmp/ccbhHPpc.s:2619   .debug_str:00000000000003eb .LASF100
     /tmp/ccbhHPpc.s:2623   .debug_str:00000000000003fb .LASF101
     /tmp/ccbhHPpc.s:2611   .debug_str:00000000000003bb .LASF102
     /tmp/ccbhHPpc.s:2669   .debug_str:0000000000000504 .LASF103
     /tmp/ccbhHPpc.s:2549   .debug_str:00000000000001cb .LASF105
     /tmp/ccbhHPpc.s:2565   .debug_str:0000000000000240 .LASF107
     /tmp/ccbhHPpc.s:2507   .debug_str:0000000000000063 .LASF108
     /tmp/ccbhHPpc.s:2601   .debug_str:000000000000035e .LASF110
     /tmp/ccbhHPpc.s:2727   .debug_str:0000000000000792 .LASF112
     /tmp/ccbhHPpc.s:2725   .debug_str:0000000000000784 .LASF126
     /tmp/ccbhHPpc.s:2583   .debug_str:00000000000002d8 .LASF127
     /tmp/ccbhHPpc.s:2557   .debug_str:000000000000020f .LASF113
     /tmp/ccbhHPpc.s:46     .text:0000000000000020 .LFB38
     /tmp/ccbhHPpc.s:393    .text:00000000000001a8 .LFE38
     /tmp/ccbhHPpc.s:2497   .debug_str:000000000000003b .LASF114
     /tmp/ccbhHPpc.s:2345   .debug_loc:0000000000000000 .LLST0
     /tmp/ccbhHPpc.s:119    .text:0000000000000084 .LBB55
     /tmp/ccbhHPpc.s:210    .text:00000000000000e0 .LBE55
     /tmp/ccbhHPpc.s:2637   .debug_str:0000000000000446 .LASF115
     /tmp/ccbhHPpc.s:2368   .debug_loc:000000000000006f .LLST9
     /tmp/ccbhHPpc.s:2671   .debug_str:0000000000000510 .LASF116
     /tmp/ccbhHPpc.s:2375   .debug_loc:0000000000000092 .LLST10
     /tmp/ccbhHPpc.s:121    .text:0000000000000084 .LBB56
GAS LISTING /tmp/ccbhHPpc.s 			page 19


     /tmp/ccbhHPpc.s:136    .text:0000000000000090 .LBE56
     /tmp/ccbhHPpc.s:141    .text:0000000000000094 .LBB58
     /tmp/ccbhHPpc.s:157    .text:00000000000000a0 .LBE58
     /tmp/ccbhHPpc.s:175    .text:00000000000000c8 .LBB60
     /tmp/ccbhHPpc.s:186    .text:00000000000000cc .LBE60
     /tmp/ccbhHPpc.s:2382   .debug_loc:00000000000000b5 .LLST11
     /tmp/ccbhHPpc.s:188    .text:00000000000000cc .LBB62
     /tmp/ccbhHPpc.s:202    .text:00000000000000d4 .LBE62
     /tmp/ccbhHPpc.s:2389   .debug_loc:00000000000000d8 .LLST12
     /tmp/ccbhHPpc.s:172    .text:00000000000000c8 .LVL5
     /tmp/ccbhHPpc.s:206    .text:00000000000000dc .LVL8
     /tmp/ccbhHPpc.s:222    .text:00000000000000f4 .LBB37
     /tmp/ccbhHPpc.s:265    .text:0000000000000138 .LBE37
     /tmp/ccbhHPpc.s:2396   .debug_loc:00000000000000fb .LLST1
     /tmp/ccbhHPpc.s:2479   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccbhHPpc.s:2681   .debug_str:0000000000000549 .LASF117
     /tmp/ccbhHPpc.s:2412   .debug_loc:0000000000000145 .LLST2
     /tmp/ccbhHPpc.s:232    .text:0000000000000104 .LVL13
     /tmp/ccbhHPpc.s:249    .text:000000000000011c .LVL16
     /tmp/ccbhHPpc.s:261    .text:0000000000000134 .LVL17
     /tmp/ccbhHPpc.s:242    .text:0000000000000110 .LVL15
     /tmp/ccbhHPpc.s:307    .text:0000000000000164 .LBB43
     /tmp/ccbhHPpc.s:381    .text:000000000000019c .LBE43
     /tmp/ccbhHPpc.s:2423   .debug_loc:000000000000017b .LLST4
     /tmp/ccbhHPpc.s:2430   .debug_loc:000000000000019e .LLST5
     /tmp/ccbhHPpc.s:309    .text:0000000000000164 .LBB44
     /tmp/ccbhHPpc.s:325    .text:0000000000000170 .LBE44
     /tmp/ccbhHPpc.s:327    .text:0000000000000170 .LBB46
     /tmp/ccbhHPpc.s:343    .text:000000000000017c .LBE46
     /tmp/ccbhHPpc.s:353    .text:0000000000000190 .LBB48
     /tmp/ccbhHPpc.s:364    .text:0000000000000194 .LBE48
     /tmp/ccbhHPpc.s:2437   .debug_loc:00000000000001c1 .LLST6
     /tmp/ccbhHPpc.s:366    .text:0000000000000194 .LBB50
     /tmp/ccbhHPpc.s:380    .text:000000000000019c .LBE50
     /tmp/ccbhHPpc.s:2444   .debug_loc:00000000000001e4 .LLST7
     /tmp/ccbhHPpc.s:351    .text:0000000000000190 .LVL24
     /tmp/ccbhHPpc.s:62     .text:0000000000000038 .LBB32
     /tmp/ccbhHPpc.s:79     .text:0000000000000044 .LBE32
     /tmp/ccbhHPpc.s:272    .text:0000000000000144 .LBB41
     /tmp/ccbhHPpc.s:280    .text:0000000000000148 .LBE41
     /tmp/ccbhHPpc.s:2451   .debug_loc:0000000000000207 .LLST3
     /tmp/ccbhHPpc.s:290    .text:0000000000000158 .LBB52
     /tmp/ccbhHPpc.s:305    .text:0000000000000164 .LBE52
     /tmp/ccbhHPpc.s:2458   .debug_loc:000000000000022a .LLST8
     /tmp/ccbhHPpc.s:387    .text:00000000000001a4 .LVL27
     /tmp/ccbhHPpc.s:10     .text:0000000000000000 .LFB37
     /tmp/ccbhHPpc.s:40     .text:0000000000000020 .LFE37
     /tmp/ccbhHPpc.s:2735   .debug_str:00000000000007e2 .LASF128
     /tmp/ccbhHPpc.s:2745   .debug_str:0000000000000829 .LASF118
     /tmp/ccbhHPpc.s:2539   .debug_str:000000000000016e .LASF129
     /tmp/ccbhHPpc.s:77     .text:0000000000000044 .LVL0
     /tmp/ccbhHPpc.s:97     .text:000000000000006c .LVL1
     /tmp/ccbhHPpc.s:115    .text:0000000000000084 .LVL2
     /tmp/ccbhHPpc.s:199    .text:00000000000000d4 .LVL7
     /tmp/ccbhHPpc.s:208    .text:00000000000000e0 .LVL9
     /tmp/ccbhHPpc.s:216    .text:00000000000000e8 .LVL10
     /tmp/ccbhHPpc.s:377    .text:000000000000019c .LVL26
GAS LISTING /tmp/ccbhHPpc.s 			page 20


     /tmp/ccbhHPpc.s:139    .text:0000000000000094 .LVL3
     /tmp/ccbhHPpc.s:155    .text:00000000000000a0 .LVL4
     /tmp/ccbhHPpc.s:183    .text:00000000000000cc .LVL6
     /tmp/ccbhHPpc.s:221    .text:00000000000000f4 .LVL11
     /tmp/ccbhHPpc.s:226    .text:00000000000000fc .LVL12
     /tmp/ccbhHPpc.s:286    .text:0000000000000158 .LVL20
     /tmp/ccbhHPpc.s:302    .text:0000000000000164 .LVL21
     /tmp/ccbhHPpc.s:323    .text:0000000000000170 .LVL22
     /tmp/ccbhHPpc.s:341    .text:000000000000017c .LVL23
     /tmp/ccbhHPpc.s:361    .text:0000000000000194 .LVL25
     /tmp/ccbhHPpc.s:271    .text:0000000000000144 .LVL18
     /tmp/ccbhHPpc.s:278    .text:0000000000000148 .LVL19
     /tmp/ccbhHPpc.s:400    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccbhHPpc.s:228    .text:00000000000000fc .LBB38
     /tmp/ccbhHPpc.s:234    .text:0000000000000104 .LBE38
     /tmp/ccbhHPpc.s:245    .text:0000000000000114 .LBB39
     /tmp/ccbhHPpc.s:264    .text:0000000000000138 .LBE39

UNDEFINED SYMBOLS
_ZN3TCB16timeSLiceCounterE
_ZN3TCB7runningE
_ZN3TCB13dispatchSleepEv
_ZN3TCB8dispatchEv
_ZN9Scheduler3putEP3TCB
_ZN9Scheduler13getNumOfSleepEv
_ZN9Scheduler8getSleepEv
_ZN9Scheduler8putSleepEP3TCB
console_handler
