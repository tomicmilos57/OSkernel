GAS LISTING /tmp/ccRNrOI2.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.section	.rodata.str1.8,"aMS",@progbits,1
   7              		.align	3
   8              	.LC0:
   9 0000 49646C65 		.string	"Idle\n"
   9      0A00
  10              		.text
  11              		.align	2
  12              		.globl	_Z5emptyv
  14              	_Z5emptyv:
  15              	.LFB37:
  16              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../h/tcb.hpp"
   2:src/main.cpp  **** #include "../h/print.hpp"
   3:src/main.cpp  **** #include "../h/workers.hpp"
   4:src/main.cpp  **** #include "../h/riscv.hpp"
   5:src/main.cpp  **** void empty(){ while(1){printString("Idle\n");} }
  17              		.loc 1 5 13
  18              		.cfi_startproc
  19 0000 130101FF 		addi	sp,sp,-16
  20              		.cfi_def_cfa_offset 16
  21 0004 23341100 		sd	ra,8(sp)
  22 0008 23308100 		sd	s0,0(sp)
  23              		.cfi_offset 1, -8
  24              		.cfi_offset 8, -16
  25 000c 13040101 		addi	s0,sp,16
  26              		.cfi_def_cfa 8, 0
  27              	.L2:
  28              		.loc 1 5 15 discriminator 1
  29              		.loc 1 5 24 discriminator 1
  30              		.loc 1 5 35 is_stmt 0 discriminator 1
  31 0010 17050000 		lla	a0,.LC0
  31      13050500 
  32 0018 97000000 		call	_Z11printStringPKc@plt
  32      E7800000 
  33              	.LVL0:
  34              		.loc 1 5 15 is_stmt 1 discriminator 1
  35 0020 6FF01FFF 		j	.L2
  36              		.cfi_endproc
  37              	.LFE37:
  39              		.align	2
  40              		.globl	_Z6semincv
  42              	_Z6semincv:
  43              	.LFB43:
   6:src/main.cpp  **** int main1() {
   7:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
   8:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
   9:src/main.cpp  ****     
  10:src/main.cpp  ****     TCB *coroutines[5];
  11:src/main.cpp  ****     coroutines[0] = TCB::createThread(nullptr);
  12:src/main.cpp  ****     printLine("MainThread created: ", (uint64)coroutines[0]);
  13:src/main.cpp  ****     TCB::running = coroutines[0];
  14:src/main.cpp  ****     Scheduler::idle = TCB::createIdleThread(empty);
GAS LISTING /tmp/ccRNrOI2.s 			page 2


  15:src/main.cpp  ****     printLine("IdleThread created: ", (uint64)Scheduler::idle);
  16:src/main.cpp  **** 
  17:src/main.cpp  ****     coroutines[1] = TCB::createThread(workerBodyA);
  18:src/main.cpp  ****     printLine("ThreadA created: ", (uint64)coroutines[1]);
  19:src/main.cpp  ****     coroutines[2] = TCB::createThread(workerBodyB);
  20:src/main.cpp  ****     printLine("ThreadB created: ", (uint64)coroutines[2]);
  21:src/main.cpp  ****     coroutines[3] = TCB::createThread(workerBodyC);
  22:src/main.cpp  ****     printLine("ThreadC created: ", (uint64)coroutines[3]);
  23:src/main.cpp  ****     coroutines[4] = TCB::createThread(workerBodyD);
  24:src/main.cpp  ****     printLine("ThreadD created: ", (uint64)coroutines[4]);
  25:src/main.cpp  ****     
  26:src/main.cpp  **** 
  27:src/main.cpp  ****     while (!(coroutines[1]->isFinished() &&
  28:src/main.cpp  ****     coroutines[2]->isFinished()&&
  29:src/main.cpp  ****     coroutines[3]->isFinished()&&
  30:src/main.cpp  ****     coroutines[4]->isFinished())) {
  31:src/main.cpp  ****         TCB::time_sleep(300);
  32:src/main.cpp  ****         //TCB::yield();
  33:src/main.cpp  ****     }
  34:src/main.cpp  ****     for (auto &coroutine: coroutines) {
  35:src/main.cpp  ****         delete coroutine;
  36:src/main.cpp  ****     }
  37:src/main.cpp  ****     printString("Finished\n");
  38:src/main.cpp  ****     return 0;
  39:src/main.cpp  **** }
  40:src/main.cpp  **** 
  41:src/main.cpp  **** 
  42:src/main.cpp  **** #include "../h/semaphore.hpp"
  43:src/main.cpp  **** 
  44:src/main.cpp  **** Semaphore *sem1;
  45:src/main.cpp  **** Semaphore *sem2;
  46:src/main.cpp  **** #include "../lib/console.h"
  47:src/main.cpp  **** void seminc(){
  44              		.loc 1 47 14
  45              		.cfi_startproc
  46 0024 130101FE 		addi	sp,sp,-32
  47              		.cfi_def_cfa_offset 32
  48 0028 233C1100 		sd	ra,24(sp)
  49 002c 23388100 		sd	s0,16(sp)
  50 0030 23349100 		sd	s1,8(sp)
  51 0034 23302101 		sd	s2,0(sp)
  52              		.cfi_offset 1, -8
  53              		.cfi_offset 8, -16
  54              		.cfi_offset 9, -24
  55              		.cfi_offset 18, -32
  56 0038 13040102 		addi	s0,sp,32
  57              		.cfi_def_cfa 8, 0
  48:src/main.cpp  ****     for (uint64 i = 0; i < 10; i++) {
  58              		.loc 1 48 5
  59              	.LVL1:
  60              	.LBB50:
  61              		.loc 1 48 17 is_stmt 0
  62 003c 93040000 		li	s1,0
  63              	.LVL2:
  64              	.L6:
  65              		.loc 1 48 26 is_stmt 1 discriminator 3
  66 0040 93079000 		li	a5,9
GAS LISTING /tmp/ccRNrOI2.s 			page 3


  67 0044 63E89704 		bgtu	s1,a5,.L4
  49:src/main.cpp  ****         TCB::time_sleep(10);
  68              		.loc 1 49 9 discriminator 2
  69              		.loc 1 49 24 is_stmt 0 discriminator 2
  70 0048 1305A000 		li	a0,10
  71 004c 97000000 		call	_ZN3TCB10time_sleepEm@plt
  71      E7800000 
  72              	.LVL3:
  50:src/main.cpp  ****         sem1->sem_wait();
  73              		.loc 1 50 9 is_stmt 1 discriminator 2
  74              		.loc 1 50 23 is_stmt 0 discriminator 2
  75 0054 17090000 		lla	s2,.LANCHOR0
  75      13090900 
  76 005c 03350900 		ld	a0,0(s2)
  77 0060 97000000 		call	_ZN9Semaphore8sem_waitEv@plt
  77      E7800000 
  78              	.LVL4:
  51:src/main.cpp  ****         __putc('A');
  79              		.loc 1 51 9 is_stmt 1 discriminator 2
  80              		.loc 1 51 15 is_stmt 0 discriminator 2
  81 0068 13051004 		li	a0,65
  82 006c 97000000 		call	__putc@plt
  82      E7800000 
  83              	.LVL5:
  52:src/main.cpp  ****         __putc('\n');
  84              		.loc 1 52 9 is_stmt 1 discriminator 2
  85              		.loc 1 52 15 is_stmt 0 discriminator 2
  86 0074 1305A000 		li	a0,10
  87 0078 97000000 		call	__putc@plt
  87      E7800000 
  88              	.LVL6:
  53:src/main.cpp  ****         sem2->sem_signal();
  89              		.loc 1 53 9 is_stmt 1 discriminator 2
  90              		.loc 1 53 25 is_stmt 0 discriminator 2
  91 0080 03358900 		ld	a0,8(s2)
  92 0084 97000000 		call	_ZN9Semaphore10sem_signalEv@plt
  92      E7800000 
  93              	.LVL7:
  48:src/main.cpp  ****         TCB::time_sleep(10);
  94              		.loc 1 48 5 is_stmt 1 discriminator 2
  95 008c 93841400 		addi	s1,s1,1
  96              	.LVL8:
  97 0090 6FF01FFB 		j	.L6
  98              	.L4:
  99              	.LBE50:
  54:src/main.cpp  ****     }
  55:src/main.cpp  **** }
 100              		.loc 1 55 1 is_stmt 0
 101 0094 83308101 		ld	ra,24(sp)
 102              		.cfi_restore 1
 103 0098 03340101 		ld	s0,16(sp)
 104              		.cfi_restore 8
 105              		.cfi_def_cfa 2, 32
 106 009c 83348100 		ld	s1,8(sp)
 107              		.cfi_restore 9
 108              	.LVL9:
 109 00a0 03390100 		ld	s2,0(sp)
GAS LISTING /tmp/ccRNrOI2.s 			page 4


 110              		.cfi_restore 18
 111 00a4 13010102 		addi	sp,sp,32
 112              		.cfi_def_cfa_offset 0
 113 00a8 67800000 		jr	ra
 114              		.cfi_endproc
 115              	.LFE43:
 117              		.align	2
 118              		.globl	_Z6semdecv
 120              	_Z6semdecv:
 121              	.LFB44:
  56:src/main.cpp  **** 
  57:src/main.cpp  **** void semdec(){
 122              		.loc 1 57 14 is_stmt 1
 123              		.cfi_startproc
 124 00ac 130101FE 		addi	sp,sp,-32
 125              		.cfi_def_cfa_offset 32
 126 00b0 233C1100 		sd	ra,24(sp)
 127 00b4 23388100 		sd	s0,16(sp)
 128 00b8 23349100 		sd	s1,8(sp)
 129 00bc 23302101 		sd	s2,0(sp)
 130              		.cfi_offset 1, -8
 131              		.cfi_offset 8, -16
 132              		.cfi_offset 9, -24
 133              		.cfi_offset 18, -32
 134 00c0 13040102 		addi	s0,sp,32
 135              		.cfi_def_cfa 8, 0
  58:src/main.cpp  ****     for (uint64 i = 0; i < 10; i++) {
 136              		.loc 1 58 5
 137              	.LVL10:
 138              	.LBB51:
 139              		.loc 1 58 17 is_stmt 0
 140 00c4 93040000 		li	s1,0
 141              	.LVL11:
 142              	.L10:
 143              		.loc 1 58 26 is_stmt 1 discriminator 3
 144 00c8 93079000 		li	a5,9
 145 00cc 63E89704 		bgtu	s1,a5,.L8
  59:src/main.cpp  ****         TCB::time_sleep(100);
 146              		.loc 1 59 9 discriminator 2
 147              		.loc 1 59 24 is_stmt 0 discriminator 2
 148 00d0 13054006 		li	a0,100
 149 00d4 97000000 		call	_ZN3TCB10time_sleepEm@plt
 149      E7800000 
 150              	.LVL12:
  60:src/main.cpp  ****         sem2->sem_wait();
 151              		.loc 1 60 9 is_stmt 1 discriminator 2
 152              		.loc 1 60 23 is_stmt 0 discriminator 2
 153 00dc 17090000 		lla	s2,.LANCHOR0
 153      13090900 
 154 00e4 03358900 		ld	a0,8(s2)
 155 00e8 97000000 		call	_ZN9Semaphore8sem_waitEv@plt
 155      E7800000 
 156              	.LVL13:
  61:src/main.cpp  ****         __putc('B');
 157              		.loc 1 61 9 is_stmt 1 discriminator 2
 158              		.loc 1 61 15 is_stmt 0 discriminator 2
 159 00f0 13052004 		li	a0,66
GAS LISTING /tmp/ccRNrOI2.s 			page 5


 160 00f4 97000000 		call	__putc@plt
 160      E7800000 
 161              	.LVL14:
  62:src/main.cpp  ****         __putc('\n');
 162              		.loc 1 62 9 is_stmt 1 discriminator 2
 163              		.loc 1 62 15 is_stmt 0 discriminator 2
 164 00fc 1305A000 		li	a0,10
 165 0100 97000000 		call	__putc@plt
 165      E7800000 
 166              	.LVL15:
  63:src/main.cpp  ****         sem1->sem_signal();
 167              		.loc 1 63 9 is_stmt 1 discriminator 2
 168              		.loc 1 63 25 is_stmt 0 discriminator 2
 169 0108 03350900 		ld	a0,0(s2)
 170 010c 97000000 		call	_ZN9Semaphore10sem_signalEv@plt
 170      E7800000 
 171              	.LVL16:
  58:src/main.cpp  ****         TCB::time_sleep(100);
 172              		.loc 1 58 5 is_stmt 1 discriminator 2
 173 0114 93841400 		addi	s1,s1,1
 174              	.LVL17:
 175 0118 6FF01FFB 		j	.L10
 176              	.L8:
 177              	.LBE51:
  64:src/main.cpp  ****     }  
  65:src/main.cpp  **** }
 178              		.loc 1 65 1 is_stmt 0
 179 011c 83308101 		ld	ra,24(sp)
 180              		.cfi_restore 1
 181 0120 03340101 		ld	s0,16(sp)
 182              		.cfi_restore 8
 183              		.cfi_def_cfa 2, 32
 184 0124 83348100 		ld	s1,8(sp)
 185              		.cfi_restore 9
 186              	.LVL18:
 187 0128 03390100 		ld	s2,0(sp)
 188              		.cfi_restore 18
 189 012c 13010102 		addi	sp,sp,32
 190              		.cfi_def_cfa_offset 0
 191 0130 67800000 		jr	ra
 192              		.cfi_endproc
 193              	.LFE44:
 195              		.section	.rodata.str1.8
 196 0006 0000     		.align	3
 197              	.LC1:
 198 0008 4D61696E 		.string	"MainThread created: "
 198      54687265 
 198      61642063 
 198      72656174 
 198      65643A20 
 199 001d 000000   		.align	3
 200              	.LC2:
 201 0020 49646C65 		.string	"IdleThread created: "
 201      54687265 
 201      61642063 
 201      72656174 
 201      65643A20 
GAS LISTING /tmp/ccRNrOI2.s 			page 6


 202 0035 000000   		.align	3
 203              	.LC3:
 204 0038 54687265 		.string	"ThreadA created: "
 204      61644120 
 204      63726561 
 204      7465643A 
 204      2000
 205 004a 00000000 		.align	3
 205      0000
 206              	.LC4:
 207 0050 54687265 		.string	"ThreadB created: "
 207      61644220 
 207      63726561 
 207      7465643A 
 207      2000
 208 0062 00000000 		.align	3
 208      0000
 209              	.LC5:
 210 0068 54687265 		.string	"ThreadC created: "
 210      61644320 
 210      63726561 
 210      7465643A 
 210      2000
 211 007a 00000000 		.align	3
 211      0000
 212              	.LC6:
 213 0080 54687265 		.string	"ThreadD created: "
 213      61644420 
 213      63726561 
 213      7465643A 
 213      2000
 214 0092 00000000 		.align	3
 214      0000
 215              	.LC7:
 216 0098 46696E69 		.string	"Finished\n"
 216      73686564 
 216      0A00
 217              		.text
 218              		.align	2
 219              		.globl	_Z5main1v
 221              	_Z5main1v:
 222              	.LFB38:
   6:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 223              		.loc 1 6 13 is_stmt 1
 224              		.cfi_startproc
 225 0134 130101FB 		addi	sp,sp,-80
 226              		.cfi_def_cfa_offset 80
 227 0138 23341104 		sd	ra,72(sp)
 228 013c 23308104 		sd	s0,64(sp)
 229 0140 233C9102 		sd	s1,56(sp)
 230 0144 23382103 		sd	s2,48(sp)
 231              		.cfi_offset 1, -8
 232              		.cfi_offset 8, -16
 233              		.cfi_offset 9, -24
 234              		.cfi_offset 18, -32
 235 0148 13040105 		addi	s0,sp,80
 236              		.cfi_def_cfa 8, 0
GAS LISTING /tmp/ccRNrOI2.s 			page 7


   7:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 237              		.loc 1 7 5
   7:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 238              		.loc 1 7 19 is_stmt 0
 239 014c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 239      83B70700 
 240              	.LVL19:
 241              	.LBB52:
 242              	.LBB53:
 243              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** #ifndef riscv_hpp
   2:src/../h/riscv.hpp **** #define riscv_hpp
   3:src/../h/riscv.hpp **** 
   4:src/../h/riscv.hpp **** #include "../lib/hw.h"
   5:src/../h/riscv.hpp **** // Vezbe 7
   6:src/../h/riscv.hpp **** 
   7:src/../h/riscv.hpp **** class Riscv {
   8:src/../h/riscv.hpp **** public:
   9:src/../h/riscv.hpp ****     static void pushRegisters();
  10:src/../h/riscv.hpp **** 
  11:src/../h/riscv.hpp ****     static void popRegisters();;
  12:src/../h/riscv.hpp **** 
  13:src/../h/riscv.hpp ****     static void popSppSpie();//has to be non inline function
  14:src/../h/riscv.hpp ****     // read register scause
  15:src/../h/riscv.hpp ****     static uint64 r_scause();
  16:src/../h/riscv.hpp **** 
  17:src/../h/riscv.hpp ****     // write register scause
  18:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  19:src/../h/riscv.hpp **** 
  20:src/../h/riscv.hpp ****     // read registre sepc
  21:src/../h/riscv.hpp ****     static uint64 r_sepc();
  22:src/../h/riscv.hpp **** 
  23:src/../h/riscv.hpp ****     // write register sepc
  24:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  25:src/../h/riscv.hpp **** 
  26:src/../h/riscv.hpp ****     // read registre stvec
  27:src/../h/riscv.hpp ****     static uint64 r_stvec();
  28:src/../h/riscv.hpp **** 
  29:src/../h/riscv.hpp ****     // write register stvec
  30:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  31:src/../h/riscv.hpp **** 
  32:src/../h/riscv.hpp ****     // read registre stval
  33:src/../h/riscv.hpp ****     static uint64 r_stval();
  34:src/../h/riscv.hpp **** 
  35:src/../h/riscv.hpp ****     // write register stval
  36:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  37:src/../h/riscv.hpp **** 
  38:src/../h/riscv.hpp ****     enum BitMaskSip {
  39:src/../h/riscv.hpp ****         SIP_SSIP = (1 << 1),
  40:src/../h/riscv.hpp ****         SIP_STIP = (1 << 5),
  41:src/../h/riscv.hpp ****         SIP_SEIP = (1 << 9),
  42:src/../h/riscv.hpp ****     };
  43:src/../h/riscv.hpp **** 
  44:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  45:src/../h/riscv.hpp **** 
  46:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  47:src/../h/riscv.hpp **** 
GAS LISTING /tmp/ccRNrOI2.s 			page 8


  48:src/../h/riscv.hpp ****     static uint64 r_sip();
  49:src/../h/riscv.hpp **** 
  50:src/../h/riscv.hpp ****     static void w_sip(uint64 mask);
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     enum BitMaskSstatus{
  53:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  54:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  55:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  56:src/../h/riscv.hpp ****     };
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     // mask set register sstatus
  59:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // mask clear register sstatus
  62:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     // read register sstatus
  65:src/../h/riscv.hpp ****     static uint64 r_sstatus();
  66:src/../h/riscv.hpp **** 
  67:src/../h/riscv.hpp ****     // wrute register sstatus
  68:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  69:src/../h/riscv.hpp **** 
  70:src/../h/riscv.hpp ****     static void supervisorTrap();
  71:src/../h/riscv.hpp **** 
  72:src/../h/riscv.hpp **** private:
  73:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  74:src/../h/riscv.hpp **** };
  75:src/../h/riscv.hpp **** 
  76:src/../h/riscv.hpp **** inline uint64 Riscv::r_scause() {
  77:src/../h/riscv.hpp ****     uint64 volatile scause;
  78:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[scause], scause" : [scause] "=r"(scause));
  79:src/../h/riscv.hpp ****     return scause;
  80:src/../h/riscv.hpp **** }
  81:src/../h/riscv.hpp **** 
  82:src/../h/riscv.hpp **** inline void Riscv::w_scause(uint64 scause) {
  83:src/../h/riscv.hpp ****     __asm__ volatile("csrw scause, %[scause]" : : [scause] "r"(scause));
  84:src/../h/riscv.hpp **** }
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp **** inline uint64 Riscv::r_sepc() {
  87:src/../h/riscv.hpp ****     uint64 volatile sepc;
  88:src/../h/riscv.hpp ****     __asm__ volatile("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
  89:src/../h/riscv.hpp ****     return sepc;
  90:src/../h/riscv.hpp **** }
  91:src/../h/riscv.hpp **** 
  92:src/../h/riscv.hpp **** inline void Riscv::w_sepc(uint64 sepc) {
  93:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
  94:src/../h/riscv.hpp **** }
  95:src/../h/riscv.hpp **** 
  96:src/../h/riscv.hpp **** inline uint64 Riscv::r_stvec(){
  97:src/../h/riscv.hpp ****     uint64 volatile stvec;
  98:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
  99:src/../h/riscv.hpp ****     return stvec;
 100:src/../h/riscv.hpp **** }
 101:src/../h/riscv.hpp **** 
 102:src/../h/riscv.hpp **** inline void Riscv::w_stvec(uint64 stvec) {
 103:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
 244              		.loc 2 103 5 is_stmt 1
GAS LISTING /tmp/ccRNrOI2.s 			page 9


 245              		.loc 2 103 69 is_stmt 0
 246              	#APP
 247              	# 103 "src/../h/riscv.hpp" 1
 104              	}
 248              		csrw stvec, a5
 249              	# 0 "" 2
 250              	.LVL20:
 251              	#NO_APP
 252              	.LBE53:
 253              	.LBE52:
   8:src/main.cpp  ****     
 254              		.loc 1 8 5 is_stmt 1
 255              	.LBB54:
 256              	.LBB55:
 105:src/../h/riscv.hpp **** 
 106:src/../h/riscv.hpp **** inline uint64 Riscv::r_stval(){
 107:src/../h/riscv.hpp ****     uint64 volatile stval;
 108:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 109:src/../h/riscv.hpp ****     return stval;
 110:src/../h/riscv.hpp **** }
 111:src/../h/riscv.hpp **** 
 112:src/../h/riscv.hpp **** inline void Riscv::w_stval(uint64 stval) {
 113:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 114:src/../h/riscv.hpp **** }
 115:src/../h/riscv.hpp **** 
 116:src/../h/riscv.hpp **** inline void Riscv::ms_sip(uint64 mask) {
 117:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 118:src/../h/riscv.hpp **** }
 119:src/../h/riscv.hpp **** 
 120:src/../h/riscv.hpp **** inline void Riscv::mc_sip(uint64 mask) {
 121:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 122:src/../h/riscv.hpp **** }
 123:src/../h/riscv.hpp **** 
 124:src/../h/riscv.hpp **** inline uint64 Riscv::r_sip() {
 125:src/../h/riscv.hpp ****     uint64 volatile sip;
 126:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 127:src/../h/riscv.hpp ****     return sip;
 128:src/../h/riscv.hpp **** }
 129:src/../h/riscv.hpp **** 
 130:src/../h/riscv.hpp **** inline void Riscv::w_sip(uint64 sip) {
 131:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void Riscv::ms_sstatus(uint64 mask) {
 135:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
 257              		.loc 2 135 5
 258              		.loc 2 135 68 is_stmt 0
 259 0158 93072000 		li	a5,2
 260              	#APP
 261              	# 135 "src/../h/riscv.hpp" 1
 136              	}
 262              		csrs sstatus, a5
 263              	# 0 "" 2
 264              	.LVL21:
 265              	#NO_APP
 266              	.LBE55:
 267              	.LBE54:
GAS LISTING /tmp/ccRNrOI2.s 			page 10


  10:src/main.cpp  ****     coroutines[0] = TCB::createThread(nullptr);
 268              		.loc 1 10 5 is_stmt 1
  11:src/main.cpp  ****     printLine("MainThread created: ", (uint64)coroutines[0]);
 269              		.loc 1 11 5
  11:src/main.cpp  ****     printLine("MainThread created: ", (uint64)coroutines[0]);
 270              		.loc 1 11 38 is_stmt 0
 271 0160 13050000 		li	a0,0
 272 0164 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 272      E7800000 
 273              	.LVL22:
 274 016c 93050500 		mv	a1,a0
  11:src/main.cpp  ****     printLine("MainThread created: ", (uint64)coroutines[0]);
 275              		.loc 1 11 19
 276 0170 233CA4FA 		sd	a0,-72(s0)
  12:src/main.cpp  ****     TCB::running = coroutines[0];
 277              		.loc 1 12 5 is_stmt 1
  12:src/main.cpp  ****     TCB::running = coroutines[0];
 278              		.loc 1 12 14 is_stmt 0
 279 0174 17050000 		lla	a0,.LC1
 279      13050500 
 280 017c 97000000 		call	_Z9printLinePKcm@plt
 280      E7800000 
 281              	.LVL23:
  13:src/main.cpp  ****     Scheduler::idle = TCB::createIdleThread(empty);
 282              		.loc 1 13 5 is_stmt 1
  13:src/main.cpp  ****     Scheduler::idle = TCB::createIdleThread(empty);
 283              		.loc 1 13 18 is_stmt 0
 284 0184 033784FB 		ld	a4,-72(s0)
 285 0188 97070000 		la	a5,_ZN3TCB7runningE
 285      83B70700 
 286 0190 23B0E700 		sd	a4,0(a5)
  14:src/main.cpp  ****     printLine("IdleThread created: ", (uint64)Scheduler::idle);
 287              		.loc 1 14 5 is_stmt 1
  14:src/main.cpp  ****     printLine("IdleThread created: ", (uint64)Scheduler::idle);
 288              		.loc 1 14 44 is_stmt 0
 289 0194 17050000 		lla	a0,_Z5emptyv
 289      13050500 
 290 019c 97000000 		call	_ZN3TCB16createIdleThreadEPFvvE@plt
 290      E7800000 
 291              	.LVL24:
 292 01a4 93050500 		mv	a1,a0
  14:src/main.cpp  ****     printLine("IdleThread created: ", (uint64)Scheduler::idle);
 293              		.loc 1 14 21
 294 01a8 97070000 		la	a5,_ZN9Scheduler4idleE
 294      83B70700 
 295 01b0 23B0A700 		sd	a0,0(a5)
  15:src/main.cpp  **** 
 296              		.loc 1 15 5 is_stmt 1
  15:src/main.cpp  **** 
 297              		.loc 1 15 14 is_stmt 0
 298 01b4 17050000 		lla	a0,.LC2
 298      13050500 
 299 01bc 97000000 		call	_Z9printLinePKcm@plt
 299      E7800000 
 300              	.LVL25:
  17:src/main.cpp  ****     printLine("ThreadA created: ", (uint64)coroutines[1]);
 301              		.loc 1 17 5 is_stmt 1
GAS LISTING /tmp/ccRNrOI2.s 			page 11


  17:src/main.cpp  ****     printLine("ThreadA created: ", (uint64)coroutines[1]);
 302              		.loc 1 17 38 is_stmt 0
 303 01c4 17050000 		la	a0,_Z11workerBodyAv
 303      03350500 
 304 01cc 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 304      E7800000 
 305              	.LVL26:
 306 01d4 93050500 		mv	a1,a0
  17:src/main.cpp  ****     printLine("ThreadA created: ", (uint64)coroutines[1]);
 307              		.loc 1 17 19
 308 01d8 2330A4FC 		sd	a0,-64(s0)
  18:src/main.cpp  ****     coroutines[2] = TCB::createThread(workerBodyB);
 309              		.loc 1 18 5 is_stmt 1
  18:src/main.cpp  ****     coroutines[2] = TCB::createThread(workerBodyB);
 310              		.loc 1 18 14 is_stmt 0
 311 01dc 17050000 		lla	a0,.LC3
 311      13050500 
 312 01e4 97000000 		call	_Z9printLinePKcm@plt
 312      E7800000 
 313              	.LVL27:
  19:src/main.cpp  ****     printLine("ThreadB created: ", (uint64)coroutines[2]);
 314              		.loc 1 19 5 is_stmt 1
  19:src/main.cpp  ****     printLine("ThreadB created: ", (uint64)coroutines[2]);
 315              		.loc 1 19 38 is_stmt 0
 316 01ec 17050000 		la	a0,_Z11workerBodyBv
 316      03350500 
 317 01f4 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 317      E7800000 
 318              	.LVL28:
 319 01fc 93050500 		mv	a1,a0
  19:src/main.cpp  ****     printLine("ThreadB created: ", (uint64)coroutines[2]);
 320              		.loc 1 19 19
 321 0200 2334A4FC 		sd	a0,-56(s0)
  20:src/main.cpp  ****     coroutines[3] = TCB::createThread(workerBodyC);
 322              		.loc 1 20 5 is_stmt 1
  20:src/main.cpp  ****     coroutines[3] = TCB::createThread(workerBodyC);
 323              		.loc 1 20 14 is_stmt 0
 324 0204 17050000 		lla	a0,.LC4
 324      13050500 
 325 020c 97000000 		call	_Z9printLinePKcm@plt
 325      E7800000 
 326              	.LVL29:
  21:src/main.cpp  ****     printLine("ThreadC created: ", (uint64)coroutines[3]);
 327              		.loc 1 21 5 is_stmt 1
  21:src/main.cpp  ****     printLine("ThreadC created: ", (uint64)coroutines[3]);
 328              		.loc 1 21 38 is_stmt 0
 329 0214 17050000 		la	a0,_Z11workerBodyCv
 329      03350500 
 330 021c 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 330      E7800000 
 331              	.LVL30:
 332 0224 93050500 		mv	a1,a0
  21:src/main.cpp  ****     printLine("ThreadC created: ", (uint64)coroutines[3]);
 333              		.loc 1 21 19
 334 0228 2338A4FC 		sd	a0,-48(s0)
  22:src/main.cpp  ****     coroutines[4] = TCB::createThread(workerBodyD);
 335              		.loc 1 22 5 is_stmt 1
GAS LISTING /tmp/ccRNrOI2.s 			page 12


  22:src/main.cpp  ****     coroutines[4] = TCB::createThread(workerBodyD);
 336              		.loc 1 22 14 is_stmt 0
 337 022c 17050000 		lla	a0,.LC5
 337      13050500 
 338 0234 97000000 		call	_Z9printLinePKcm@plt
 338      E7800000 
 339              	.LVL31:
  23:src/main.cpp  ****     printLine("ThreadD created: ", (uint64)coroutines[4]);
 340              		.loc 1 23 5 is_stmt 1
  23:src/main.cpp  ****     printLine("ThreadD created: ", (uint64)coroutines[4]);
 341              		.loc 1 23 38 is_stmt 0
 342 023c 17050000 		la	a0,_Z11workerBodyDv
 342      03350500 
 343 0244 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 343      E7800000 
 344              	.LVL32:
 345 024c 93050500 		mv	a1,a0
  23:src/main.cpp  ****     printLine("ThreadD created: ", (uint64)coroutines[4]);
 346              		.loc 1 23 19
 347 0250 233CA4FC 		sd	a0,-40(s0)
  24:src/main.cpp  ****     
 348              		.loc 1 24 5 is_stmt 1
  24:src/main.cpp  ****     
 349              		.loc 1 24 14 is_stmt 0
 350 0254 17050000 		lla	a0,.LC6
 350      13050500 
 351 025c 97000000 		call	_Z9printLinePKcm@plt
 351      E7800000 
 352              	.LVL33:
 353 0264 6F000001 		j	.L15
 354              	.L13:
  31:src/main.cpp  ****         //TCB::yield();
 355              		.loc 1 31 9 is_stmt 1 discriminator 3
  31:src/main.cpp  ****         //TCB::yield();
 356              		.loc 1 31 24 is_stmt 0 discriminator 3
 357 0268 1305C012 		li	a0,300
 358 026c 97000000 		call	_ZN3TCB10time_sleepEm@plt
 358      E7800000 
 359              	.LVL34:
 360              	.L15:
  27:src/main.cpp  ****     coroutines[2]->isFinished()&&
 361              		.loc 1 27 5 is_stmt 1
  27:src/main.cpp  ****     coroutines[2]->isFinished()&&
 362              		.loc 1 27 12
  27:src/main.cpp  ****     coroutines[2]->isFinished()&&
 363              		.loc 1 27 26 is_stmt 0
 364 0274 833704FC 		ld	a5,-64(s0)
 365              	.LVL35:
 366              	.LBB56:
 367              	.LBB57:
 368              		.file 3 "src/../h/tcb.hpp"
   1:src/../h/tcb.hpp **** #ifndef cbb_hpp
   2:src/../h/tcb.hpp **** #define cbb_hpp
   3:src/../h/tcb.hpp **** 
   4:src/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/tcb.hpp **** #include "scheduler.hpp"
   6:src/../h/tcb.hpp **** // Vezbe 7
GAS LISTING /tmp/ccRNrOI2.s 			page 13


   7:src/../h/tcb.hpp **** 
   8:src/../h/tcb.hpp **** class TCB {
   9:src/../h/tcb.hpp **** private:
  10:src/../h/tcb.hpp ****     using Body = void (*)();
  11:src/../h/tcb.hpp ****     struct Context {
  12:src/../h/tcb.hpp ****         uint64 ra;
  13:src/../h/tcb.hpp ****         uint64 sp;
  14:src/../h/tcb.hpp ****     };
  15:src/../h/tcb.hpp ****     Body body;
  16:src/../h/tcb.hpp ****     uint64 *stack;
  17:src/../h/tcb.hpp ****     Context context;
  18:src/../h/tcb.hpp ****     uint64 timeSlice;
  19:src/../h/tcb.hpp ****     bool finished;
  20:src/../h/tcb.hpp ****     uint64 sleeping = 0;
  21:src/../h/tcb.hpp **** 
  22:src/../h/tcb.hpp ****     static uint64 timeSLiceCounter;
  23:src/../h/tcb.hpp ****     static uint64 constexpr STACK_SIZE = 1024;
  24:src/../h/tcb.hpp ****     static uint64 constexpr TIME_SLICE = 2;
  25:src/../h/tcb.hpp **** public:
  26:src/../h/tcb.hpp ****     //using Body = void (*)();
  27:src/../h/tcb.hpp **** 
  28:src/../h/tcb.hpp ****     static TCB *createThread(Body body);
  29:src/../h/tcb.hpp ****     static TCB *createIdleThread(Body body);
  30:src/../h/tcb.hpp **** 
  31:src/../h/tcb.hpp ****     bool isFinished() const { return finished; }
 369              		.loc 3 31 31 is_stmt 1
 370              		.loc 3 31 38 is_stmt 0
 371 0278 83C78702 		lbu	a5,40(a5)
 372              	.LVL36:
 373              	.LBE57:
 374              	.LBE56:
  27:src/main.cpp  ****     coroutines[2]->isFinished()&&
 375              		.loc 1 27 12
 376 027c E38607FE 		beqz	a5,.L13
  28:src/main.cpp  ****     coroutines[3]->isFinished()&&
 377              		.loc 1 28 17 discriminator 2
 378 0280 833784FC 		ld	a5,-56(s0)
 379              	.LVL37:
 380              	.LBB58:
 381              	.LBB59:
 382              		.loc 3 31 31 is_stmt 1 discriminator 2
 383              		.loc 3 31 38 is_stmt 0 discriminator 2
 384 0284 83C78702 		lbu	a5,40(a5)
 385              	.LVL38:
 386              	.LBE59:
 387              	.LBE58:
  27:src/main.cpp  ****     coroutines[2]->isFinished()&&
 388              		.loc 1 27 42 discriminator 2
 389 0288 E38007FE 		beqz	a5,.L13
  29:src/main.cpp  ****     coroutines[4]->isFinished())) {
 390              		.loc 1 29 17
 391 028c 833704FD 		ld	a5,-48(s0)
 392              	.LVL39:
 393              	.LBB60:
 394              	.LBB61:
 395              		.loc 3 31 31 is_stmt 1
 396              		.loc 3 31 38 is_stmt 0
GAS LISTING /tmp/ccRNrOI2.s 			page 14


 397 0290 83C78702 		lbu	a5,40(a5)
 398              	.LVL40:
 399              	.LBE61:
 400              	.LBE60:
  28:src/main.cpp  ****     coroutines[3]->isFinished()&&
 401              		.loc 1 28 32
 402 0294 E38A07FC 		beqz	a5,.L13
  30:src/main.cpp  ****         TCB::time_sleep(300);
 403              		.loc 1 30 17 discriminator 4
 404 0298 833784FD 		ld	a5,-40(s0)
 405              	.LVL41:
 406              	.LBB62:
 407              	.LBB63:
 408              		.loc 3 31 31 is_stmt 1 discriminator 4
 409              		.loc 3 31 38 is_stmt 0 discriminator 4
 410 029c 83C78702 		lbu	a5,40(a5)
 411              	.LVL42:
 412              	.LBE63:
 413              	.LBE62:
  27:src/main.cpp  ****     coroutines[2]->isFinished()&&
 414              		.loc 1 27 12 discriminator 4
 415 02a0 E38407FC 		beqz	a5,.L13
 416 02a4 930484FB 		addi	s1,s0,-72
 417 02a8 6F004001 		j	.L14
 418              	.LVL43:
 419              	.L18:
 420              	.LBB64:
  35:src/main.cpp  ****     }
 421              		.loc 1 35 16
 422 02ac 13050900 		mv	a0,s2
 423 02b0 97000000 		call	_ZdlPv@plt
 423      E7800000 
 424              	.LVL44:
 425              	.L17:
  34:src/main.cpp  ****         delete coroutine;
 426              		.loc 1 34 5 is_stmt 1 discriminator 3
 427 02b8 93848400 		addi	s1,s1,8
 428              	.LVL45:
 429              	.L14:
  34:src/main.cpp  ****         delete coroutine;
 430              		.loc 1 34 27 discriminator 1
 431 02bc 930704FE 		addi	a5,s0,-32
 432 02c0 6380F402 		beq	s1,a5,.L16
 433              	.LVL46:
  35:src/main.cpp  ****     }
 434              		.loc 1 35 9 discriminator 2
  35:src/main.cpp  ****     }
 435              		.loc 1 35 16 is_stmt 0 discriminator 2
 436 02c4 03B90400 		ld	s2,0(s1)
  35:src/main.cpp  ****     }
 437              		.loc 1 35 25 discriminator 2
 438 02c8 E30809FE 		beqz	s2,.L17
 439              	.LVL47:
 440              	.LBB65:
 441              	.LBB66:
  32:src/../h/tcb.hpp ****     void setFinished(bool f) { TCB::finished = f; }
  33:src/../h/tcb.hpp ****     uint64 getTimeSlice() const { return timeSlice; }
GAS LISTING /tmp/ccRNrOI2.s 			page 15


  34:src/../h/tcb.hpp ****     static void thread_exit();
  35:src/../h/tcb.hpp ****     static int time_sleep (time_t);
  36:src/../h/tcb.hpp ****     static void dispatch();
  37:src/../h/tcb.hpp ****     static void dispatchSleep();
  38:src/../h/tcb.hpp ****     static void yield();
  39:src/../h/tcb.hpp **** 
  40:src/../h/tcb.hpp ****     ~TCB() { delete[] stack; }
 442              		.loc 3 40 14 is_stmt 1
 443              		.loc 3 40 23 is_stmt 0
 444 02cc 03358900 		ld	a0,8(s2)
 445              		.loc 3 40 28
 446 02d0 E30E05FC 		beqz	a0,.L18
 447              		.loc 3 40 23
 448 02d4 97000000 		call	_ZdaPv@plt
 448      E7800000 
 449              	.LVL48:
 450 02dc 6FF01FFD 		j	.L18
 451              	.LVL49:
 452              	.L16:
 453              	.LBE66:
 454              	.LBE65:
 455              	.LBE64:
  37:src/main.cpp  ****     return 0;
 456              		.loc 1 37 5 is_stmt 1
  37:src/main.cpp  ****     return 0;
 457              		.loc 1 37 16 is_stmt 0
 458 02e0 17050000 		lla	a0,.LC7
 458      13050500 
 459 02e8 97000000 		call	_Z11printStringPKc@plt
 459      E7800000 
 460              	.LVL50:
  38:src/main.cpp  **** }
 461              		.loc 1 38 5 is_stmt 1
  39:src/main.cpp  **** 
 462              		.loc 1 39 1 is_stmt 0
 463 02f0 13050000 		li	a0,0
 464 02f4 83308104 		ld	ra,72(sp)
 465              		.cfi_restore 1
 466 02f8 03340104 		ld	s0,64(sp)
 467              		.cfi_restore 8
 468              		.cfi_def_cfa 2, 80
 469 02fc 83348103 		ld	s1,56(sp)
 470              		.cfi_restore 9
 471              	.LVL51:
 472 0300 03390103 		ld	s2,48(sp)
 473              		.cfi_restore 18
 474 0304 13010105 		addi	sp,sp,80
 475              		.cfi_def_cfa_offset 0
 476 0308 67800000 		jr	ra
 477              		.cfi_endproc
 478              	.LFE38:
 480              		.align	2
 481              		.globl	main
 483              	main:
 484              	.LFB45:
  66:src/main.cpp  **** int main(){
 485              		.loc 1 66 11 is_stmt 1
GAS LISTING /tmp/ccRNrOI2.s 			page 16


 486              		.cfi_startproc
 487 030c 130101FB 		addi	sp,sp,-80
 488              		.cfi_def_cfa_offset 80
 489 0310 23341104 		sd	ra,72(sp)
 490 0314 23308104 		sd	s0,64(sp)
 491 0318 233C9102 		sd	s1,56(sp)
 492 031c 23382103 		sd	s2,48(sp)
 493              		.cfi_offset 1, -8
 494              		.cfi_offset 8, -16
 495              		.cfi_offset 9, -24
 496              		.cfi_offset 18, -32
 497 0320 13040105 		addi	s0,sp,80
 498              		.cfi_def_cfa 8, 0
  67:src/main.cpp  ****     __putc('S');
 499              		.loc 1 67 5
 500              		.loc 1 67 11 is_stmt 0
 501 0324 13053005 		li	a0,83
 502 0328 97000000 		call	__putc@plt
 502      E7800000 
 503              	.LVL52:
  68:src/main.cpp  ****     __putc('\n');
 504              		.loc 1 68 5 is_stmt 1
 505              		.loc 1 68 11 is_stmt 0
 506 0330 1305A000 		li	a0,10
 507 0334 97000000 		call	__putc@plt
 507      E7800000 
 508              	.LVL53:
  69:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 509              		.loc 1 69 5 is_stmt 1
 510              		.loc 1 69 19 is_stmt 0
 511 033c 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 511      83B70700 
 512              	.LVL54:
 513              	.LBB67:
 514              	.LBB68:
 103:src/../h/riscv.hpp **** }
 515              		.loc 2 103 5 is_stmt 1
 103:src/../h/riscv.hpp **** }
 516              		.loc 2 103 69 is_stmt 0
 517              	#APP
 518              	# 103 "src/../h/riscv.hpp" 1
 519              		csrw stvec, a5
 520              	# 0 "" 2
 521              	.LVL55:
 522              	#NO_APP
 523              	.LBE68:
 524              	.LBE67:
  70:src/main.cpp  ****     __putc('S');
 525              		.loc 1 70 5 is_stmt 1
 526              		.loc 1 70 11 is_stmt 0
 527 0348 13053005 		li	a0,83
 528 034c 97000000 		call	__putc@plt
 528      E7800000 
 529              	.LVL56:
  71:src/main.cpp  ****     __putc('\n');
 530              		.loc 1 71 5 is_stmt 1
 531              		.loc 1 71 11 is_stmt 0
GAS LISTING /tmp/ccRNrOI2.s 			page 17


 532 0354 1305A000 		li	a0,10
 533 0358 97000000 		call	__putc@plt
 533      E7800000 
 534              	.LVL57:
  72:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 535              		.loc 1 72 5 is_stmt 1
 536              	.LBB69:
 537              	.LBB70:
 135:src/../h/riscv.hpp **** }
 538              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 539              		.loc 2 135 68 is_stmt 0
 540 0360 93072000 		li	a5,2
 541              	#APP
 542              	# 135 "src/../h/riscv.hpp" 1
 543              		csrs sstatus, a5
 544              	# 0 "" 2
 545              	.LVL58:
 546              	#NO_APP
 547              	.LBE70:
 548              	.LBE69:
  73:src/main.cpp  ****     __putc('S');
 549              		.loc 1 73 5 is_stmt 1
 550              		.loc 1 73 11 is_stmt 0
 551 0368 13053005 		li	a0,83
 552 036c 97000000 		call	__putc@plt
 552      E7800000 
 553              	.LVL59:
  74:src/main.cpp  ****     __putc('\n');
 554              		.loc 1 74 5 is_stmt 1
 555              		.loc 1 74 11 is_stmt 0
 556 0374 1305A000 		li	a0,10
 557 0378 97000000 		call	__putc@plt
 557      E7800000 
 558              	.LVL60:
  75:src/main.cpp  ****     TCB *coroutines[5];
 559              		.loc 1 75 5 is_stmt 1
  76:src/main.cpp  ****     coroutines[0] = TCB::createThread(nullptr);
 560              		.loc 1 76 5
 561              		.loc 1 76 38 is_stmt 0
 562 0380 13050000 		li	a0,0
 563 0384 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 563      E7800000 
 564              	.LVL61:
 565 038c 93050500 		mv	a1,a0
 566              		.loc 1 76 19
 567 0390 233CA4FA 		sd	a0,-72(s0)
  77:src/main.cpp  ****     printLine("MainThread created: ", (uint64)coroutines[0]);
 568              		.loc 1 77 5 is_stmt 1
 569              		.loc 1 77 14 is_stmt 0
 570 0394 17050000 		lla	a0,.LC1
 570      13050500 
 571 039c 97000000 		call	_Z9printLinePKcm@plt
 571      E7800000 
 572              	.LVL62:
  78:src/main.cpp  ****     TCB::running = coroutines[0];
 573              		.loc 1 78 5 is_stmt 1
GAS LISTING /tmp/ccRNrOI2.s 			page 18


 574              		.loc 1 78 18 is_stmt 0
 575 03a4 033784FB 		ld	a4,-72(s0)
 576 03a8 97070000 		la	a5,_ZN3TCB7runningE
 576      83B70700 
 577 03b0 23B0E700 		sd	a4,0(a5)
  79:src/main.cpp  ****     Scheduler::idle = TCB::createIdleThread(empty);
 578              		.loc 1 79 5 is_stmt 1
 579              		.loc 1 79 44 is_stmt 0
 580 03b4 17050000 		lla	a0,_Z5emptyv
 580      13050500 
 581 03bc 97000000 		call	_ZN3TCB16createIdleThreadEPFvvE@plt
 581      E7800000 
 582              	.LVL63:
 583 03c4 93050500 		mv	a1,a0
 584              		.loc 1 79 21
 585 03c8 97070000 		la	a5,_ZN9Scheduler4idleE
 585      83B70700 
 586 03d0 23B0A700 		sd	a0,0(a5)
  80:src/main.cpp  ****     printLine("IdleThread created: ", (uint64)Scheduler::idle);
 587              		.loc 1 80 5 is_stmt 1
 588              		.loc 1 80 14 is_stmt 0
 589 03d4 17050000 		lla	a0,.LC2
 589      13050500 
 590 03dc 97000000 		call	_Z9printLinePKcm@plt
 590      E7800000 
 591              	.LVL64:
  81:src/main.cpp  **** 
  82:src/main.cpp  ****     sem1 =  new Semaphore(1);
 592              		.loc 1 82 5 is_stmt 1
 593              		.loc 1 82 28 is_stmt 0
 594 03e4 13050002 		li	a0,32
 595 03e8 97000000 		call	_Znwm@plt
 595      E7800000 
 596              	.LVL65:
 597              	.LBB71:
 598              	.LBB72:
 599              		.file 4 "src/../h/semaphore.hpp"
   1:src/../h/semaphore.hpp **** #ifndef Semaphore_hpp
   2:src/../h/semaphore.hpp **** #define Semaphore_hpp
   3:src/../h/semaphore.hpp **** #include "../lib/hw.h"
   4:src/../h/semaphore.hpp **** #include "../h/list.hpp"
   5:src/../h/semaphore.hpp **** class TCB;
   6:src/../h/semaphore.hpp **** class Semaphore{
   7:src/../h/semaphore.hpp **** private:
   8:src/../h/semaphore.hpp ****     int val;
   9:src/../h/semaphore.hpp ****     List<TCB> blockedQueue;
  10:src/../h/semaphore.hpp **** protected:
  11:src/../h/semaphore.hpp ****     void sem_block();
  12:src/../h/semaphore.hpp ****     void sem_unblock();
  13:src/../h/semaphore.hpp ****     void putBlock(TCB *tcb);
  14:src/../h/semaphore.hpp ****     TCB *getBlock();
  15:src/../h/semaphore.hpp **** public:
  16:src/../h/semaphore.hpp ****     Semaphore(int init = 1) : val(init) {}
 600              		.loc 4 16 39
 601 03f0 93071000 		li	a5,1
 602 03f4 2320F500 		sw	a5,0(a0)
 603              	.LVL66:
GAS LISTING /tmp/ccRNrOI2.s 			page 19


 604              	.LBB73:
 605              	.LBB74:
 606              		.file 5 "src/../h/list.hpp"
   1:src/../h/list.hpp **** #ifndef list_hpp
   2:src/../h/list.hpp **** #define list_hpp
   3:src/../h/list.hpp **** // Vezbe 7
   4:src/../h/list.hpp **** template <typename T> class List {
   5:src/../h/list.hpp **** 
   6:src/../h/list.hpp **** private:
   7:src/../h/list.hpp ****   struct Elem {
   8:src/../h/list.hpp ****     T *data;
   9:src/../h/list.hpp ****     Elem *next;
  10:src/../h/list.hpp **** 
  11:src/../h/list.hpp ****     Elem(T *data, Elem *next) : data(data), next(next) {}
  12:src/../h/list.hpp ****   };
  13:src/../h/list.hpp ****   Elem *head, *tail;
  14:src/../h/list.hpp ****   uint64 n;
  15:src/../h/list.hpp **** public:
  16:src/../h/list.hpp ****   List() : head(0), tail(0) {}
 607              		.loc 5 16 27
 608 03f8 23340500 		sd	zero,8(a0)
 609 03fc 23380500 		sd	zero,16(a0)
 610              	.LVL67:
 611              	.LBE74:
 612              	.LBE73:
 613              	.LBE72:
 614              	.LBE71:
 615              		.loc 1 82 10
 616 0400 97040000 		lla	s1,.LANCHOR0
 616      93840400 
 617 0408 23B0A400 		sd	a0,0(s1)
  83:src/main.cpp  ****     sem2 =  new Semaphore(0);
 618              		.loc 1 83 5 is_stmt 1
 619              		.loc 1 83 28 is_stmt 0
 620 040c 13050002 		li	a0,32
 621 0410 97000000 		call	_Znwm@plt
 621      E7800000 
 622              	.LVL68:
 623              	.LBB75:
 624              	.LBB76:
 625              		.loc 4 16 39
 626 0418 23200500 		sw	zero,0(a0)
 627              	.LVL69:
 628              	.LBB77:
 629              	.LBB78:
 630              		.loc 5 16 27
 631 041c 23340500 		sd	zero,8(a0)
 632 0420 23380500 		sd	zero,16(a0)
 633              	.LVL70:
 634              	.LBE78:
 635              	.LBE77:
 636              	.LBE76:
 637              	.LBE75:
 638              		.loc 1 83 10
 639 0424 23B4A400 		sd	a0,8(s1)
  84:src/main.cpp  **** 
  85:src/main.cpp  ****     coroutines[1] = TCB::createThread(seminc);
GAS LISTING /tmp/ccRNrOI2.s 			page 20


 640              		.loc 1 85 5 is_stmt 1
 641              		.loc 1 85 38 is_stmt 0
 642 0428 17050000 		lla	a0,_Z6semincv
 642      13050500 
 643 0430 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 643      E7800000 
 644              	.LVL71:
 645 0438 93050500 		mv	a1,a0
 646              		.loc 1 85 19
 647 043c 2330A4FC 		sd	a0,-64(s0)
  86:src/main.cpp  ****     printLine("ThreadA created: ", (uint64)coroutines[1]);
 648              		.loc 1 86 5 is_stmt 1
 649              		.loc 1 86 14 is_stmt 0
 650 0440 17050000 		lla	a0,.LC3
 650      13050500 
 651 0448 97000000 		call	_Z9printLinePKcm@plt
 651      E7800000 
 652              	.LVL72:
  87:src/main.cpp  ****     //coroutines[4] = TCB::createThread(semdec);
  88:src/main.cpp  ****     //printLine("ThreadB created: ", (uint64)coroutines[4]);
  89:src/main.cpp  ****     coroutines[3] = TCB::createThread(semdec);
 653              		.loc 1 89 5 is_stmt 1
 654              		.loc 1 89 38 is_stmt 0
 655 0450 17050000 		lla	a0,_Z6semdecv
 655      13050500 
 656 0458 97000000 		call	_ZN3TCB12createThreadEPFvvE@plt
 656      E7800000 
 657              	.LVL73:
 658 0460 93050500 		mv	a1,a0
 659              		.loc 1 89 19
 660 0464 2338A4FC 		sd	a0,-48(s0)
  90:src/main.cpp  ****     printLine("ThreadA created: ", (uint64)coroutines[3]);
 661              		.loc 1 90 5 is_stmt 1
 662              		.loc 1 90 14 is_stmt 0
 663 0468 17050000 		lla	a0,.LC3
 663      13050500 
 664 0470 97000000 		call	_Z9printLinePKcm@plt
 664      E7800000 
 665              	.LVL74:
 666              	.L22:
  91:src/main.cpp  ****     //coroutines[2] = TCB::createThread(semdec);
  92:src/main.cpp  ****     //printLine("ThreadB created: ", (uint64)coroutines[2]);
  93:src/main.cpp  **** 
  94:src/main.cpp  **** 
  95:src/main.cpp  ****     while (!(coroutines[1]->isFinished() &&
 667              		.loc 1 95 5 is_stmt 1
 668              		.loc 1 95 12
 669              		.loc 1 95 26 is_stmt 0
 670 0478 833704FC 		ld	a5,-64(s0)
 671              	.LVL75:
 672              	.LBB79:
 673              	.LBB80:
  31:src/../h/tcb.hpp ****     void setFinished(bool f) { TCB::finished = f; }
 674              		.loc 3 31 31 is_stmt 1
  31:src/../h/tcb.hpp ****     void setFinished(bool f) { TCB::finished = f; }
 675              		.loc 3 31 38 is_stmt 0
 676 047c 83C78702 		lbu	a5,40(a5)
GAS LISTING /tmp/ccRNrOI2.s 			page 21


 677              	.LVL76:
 678              	.LBE80:
 679              	.LBE79:
 680              		.loc 1 95 12
 681 0480 E38C07FE 		beqz	a5,.L22
  96:src/main.cpp  ****     coroutines[3]->isFinished())) {
 682              		.loc 1 96 17 discriminator 2
 683 0484 833704FD 		ld	a5,-48(s0)
 684              	.LVL77:
 685              	.LBB81:
 686              	.LBB82:
  31:src/../h/tcb.hpp ****     void setFinished(bool f) { TCB::finished = f; }
 687              		.loc 3 31 31 is_stmt 1 discriminator 2
  31:src/../h/tcb.hpp ****     void setFinished(bool f) { TCB::finished = f; }
 688              		.loc 3 31 38 is_stmt 0 discriminator 2
 689 0488 83C78702 		lbu	a5,40(a5)
 690              	.LVL78:
 691              	.LBE82:
 692              	.LBE81:
  95:src/main.cpp  ****     coroutines[3]->isFinished())) {
 693              		.loc 1 95 12 discriminator 2
 694 048c E38607FE 		beqz	a5,.L22
 695 0490 930484FB 		addi	s1,s0,-72
 696 0494 6F004001 		j	.L27
 697              	.LVL79:
 698              	.L26:
 699              	.LBB83:
  97:src/main.cpp  ****         //TCB::time_sleep(300);
  98:src/main.cpp  ****         //TCB::yield();
  99:src/main.cpp  ****     }
 100:src/main.cpp  ****     for (auto &coroutine: coroutines) {
 101:src/main.cpp  ****         delete coroutine;
 700              		.loc 1 101 16
 701 0498 13050900 		mv	a0,s2
 702 049c 97000000 		call	_ZdlPv@plt
 702      E7800000 
 703              	.LVL80:
 704              	.L25:
 100:src/main.cpp  ****         delete coroutine;
 705              		.loc 1 100 5 is_stmt 1 discriminator 3
 706 04a4 93848400 		addi	s1,s1,8
 707              	.LVL81:
 708              	.L27:
 100:src/main.cpp  ****         delete coroutine;
 709              		.loc 1 100 27 discriminator 1
 710 04a8 930704FE 		addi	a5,s0,-32
 711 04ac 6380F402 		beq	s1,a5,.L24
 712              	.LVL82:
 713              		.loc 1 101 9 discriminator 2
 714              		.loc 1 101 16 is_stmt 0 discriminator 2
 715 04b0 03B90400 		ld	s2,0(s1)
 716              		.loc 1 101 25 discriminator 2
 717 04b4 E30809FE 		beqz	s2,.L25
 718              	.LVL83:
 719              	.LBB84:
 720              	.LBB85:
 721              		.loc 3 40 14 is_stmt 1
GAS LISTING /tmp/ccRNrOI2.s 			page 22


 722              		.loc 3 40 23 is_stmt 0
 723 04b8 03358900 		ld	a0,8(s2)
 724              		.loc 3 40 28
 725 04bc E30E05FC 		beqz	a0,.L26
 726              		.loc 3 40 23
 727 04c0 97000000 		call	_ZdaPv@plt
 727      E7800000 
 728              	.LVL84:
 729 04c8 6FF01FFD 		j	.L26
 730              	.LVL85:
 731              	.L24:
 732              	.LBE85:
 733              	.LBE84:
 734              	.LBE83:
 102:src/main.cpp  ****     }
 103:src/main.cpp  ****     printString("Finished\n");
 735              		.loc 1 103 5 is_stmt 1
 736              		.loc 1 103 16 is_stmt 0
 737 04cc 17050000 		lla	a0,.LC7
 737      13050500 
 738 04d4 97000000 		call	_Z11printStringPKc@plt
 738      E7800000 
 739              	.LVL86:
 104:src/main.cpp  ****     return 0;
 740              		.loc 1 104 5 is_stmt 1
 105:src/main.cpp  **** }
 741              		.loc 1 105 1 is_stmt 0
 742 04dc 13050000 		li	a0,0
 743 04e0 83308104 		ld	ra,72(sp)
 744              		.cfi_restore 1
 745 04e4 03340104 		ld	s0,64(sp)
 746              		.cfi_restore 8
 747              		.cfi_def_cfa 2, 80
 748 04e8 83348103 		ld	s1,56(sp)
 749              		.cfi_restore 9
 750              	.LVL87:
 751 04ec 03390103 		ld	s2,48(sp)
 752              		.cfi_restore 18
 753 04f0 13010105 		addi	sp,sp,80
 754              		.cfi_def_cfa_offset 0
 755 04f4 67800000 		jr	ra
 756              		.cfi_endproc
 757              	.LFE45:
 759              		.align	2
 760              		.globl	_Z5main3v
 762              	_Z5main3v:
 763              	.LFB46:
 106:src/main.cpp  **** int main3(){
 764              		.loc 1 106 12 is_stmt 1
 765              		.cfi_startproc
 766 04f8 130101FF 		addi	sp,sp,-16
 767              		.cfi_def_cfa_offset 16
 768 04fc 23341100 		sd	ra,8(sp)
 769 0500 23308100 		sd	s0,0(sp)
 770              		.cfi_offset 1, -8
 771              		.cfi_offset 8, -16
 772 0504 13040101 		addi	s0,sp,16
GAS LISTING /tmp/ccRNrOI2.s 			page 23


 773              		.cfi_def_cfa 8, 0
 107:src/main.cpp  ****     __putc('S');
 774              		.loc 1 107 5
 775              		.loc 1 107 11 is_stmt 0
 776 0508 13053005 		li	a0,83
 777 050c 97000000 		call	__putc@plt
 777      E7800000 
 778              	.LVL88:
 108:src/main.cpp  ****     __putc('\n');
 779              		.loc 1 108 5 is_stmt 1
 780              		.loc 1 108 11 is_stmt 0
 781 0514 1305A000 		li	a0,10
 782 0518 97000000 		call	__putc@plt
 782      E7800000 
 783              	.LVL89:
 109:src/main.cpp  ****     Riscv::w_stvec((uint64) &Riscv::supervisorTrap);
 784              		.loc 1 109 5 is_stmt 1
 785              		.loc 1 109 19 is_stmt 0
 786 0520 97070000 		la	a5,_ZN5Riscv14supervisorTrapEv
 786      83B70700 
 787              	.LVL90:
 788              	.LBB86:
 789              	.LBB87:
 103:src/../h/riscv.hpp **** }
 790              		.loc 2 103 5 is_stmt 1
 103:src/../h/riscv.hpp **** }
 791              		.loc 2 103 69 is_stmt 0
 792              	#APP
 793              	# 103 "src/../h/riscv.hpp" 1
 794              		csrw stvec, a5
 795              	# 0 "" 2
 796              	.LVL91:
 797              	#NO_APP
 798              	.LBE87:
 799              	.LBE86:
 110:src/main.cpp  ****     __putc('S');
 800              		.loc 1 110 5 is_stmt 1
 801              		.loc 1 110 11 is_stmt 0
 802 052c 13053005 		li	a0,83
 803 0530 97000000 		call	__putc@plt
 803      E7800000 
 804              	.LVL92:
 111:src/main.cpp  ****     __putc('\n');
 805              		.loc 1 111 5 is_stmt 1
 806              		.loc 1 111 11 is_stmt 0
 807 0538 1305A000 		li	a0,10
 808 053c 97000000 		call	__putc@plt
 808      E7800000 
 809              	.LVL93:
 112:src/main.cpp  ****     Riscv::ms_sstatus(Riscv::SSTATUS_SIE);
 810              		.loc 1 112 5 is_stmt 1
 811              	.LBB88:
 812              	.LBB89:
 135:src/../h/riscv.hpp **** }
 813              		.loc 2 135 5
 135:src/../h/riscv.hpp **** }
 814              		.loc 2 135 68 is_stmt 0
GAS LISTING /tmp/ccRNrOI2.s 			page 24


 815 0544 93072000 		li	a5,2
 816              	#APP
 817              	# 135 "src/../h/riscv.hpp" 1
 818              		csrs sstatus, a5
 819              	# 0 "" 2
 820              	.LVL94:
 821              	#NO_APP
 822              	.LBE89:
 823              	.LBE88:
 113:src/main.cpp  ****     __putc('S');
 824              		.loc 1 113 5 is_stmt 1
 825              		.loc 1 113 11 is_stmt 0
 826 054c 13053005 		li	a0,83
 827 0550 97000000 		call	__putc@plt
 827      E7800000 
 828              	.LVL95:
 114:src/main.cpp  ****     __putc('\n');
 829              		.loc 1 114 5 is_stmt 1
 830              		.loc 1 114 11 is_stmt 0
 831 0558 1305A000 		li	a0,10
 832 055c 97000000 		call	__putc@plt
 832      E7800000 
 833              	.LVL96:
 115:src/main.cpp  ****     return 0;
 834              		.loc 1 115 5 is_stmt 1
 116:src/main.cpp  **** }...
 835              		.loc 1 116 1 is_stmt 0
 836 0564 13050000 		li	a0,0
 837 0568 83308100 		ld	ra,8(sp)
 838              		.cfi_restore 1
 839 056c 03340100 		ld	s0,0(sp)
 840              		.cfi_restore 8
 841              		.cfi_def_cfa 2, 16
 842 0570 13010101 		addi	sp,sp,16
 843              		.cfi_def_cfa_offset 0
 844 0574 67800000 		jr	ra
 845              		.cfi_endproc
 846              	.LFE46:
 848              		.globl	sem2
 849              		.globl	sem1
 850              		.bss
 851              		.align	3
 852              		.set	.LANCHOR0,. + 0
 855              	sem1:
 856 0000 00000000 		.zero	8
 856      00000000 
 859              	sem2:
 860 0008 00000000 		.zero	8
 860      00000000 
 861              		.text
 862              	.Letext0:
 863              		.file 6 "src/../h/../lib/hw.h"
 864              		.file 7 "src/../lib/console.h"
 865              		.file 8 "src/../h/print.hpp"
GAS LISTING /tmp/ccRNrOI2.s 			page 25


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/ccRNrOI2.s:14     .text:0000000000000000 _Z5emptyv
     /tmp/ccRNrOI2.s:18     .text:0000000000000000 .L0 
     /tmp/ccRNrOI2.s:19     .text:0000000000000000 .L0 
     /tmp/ccRNrOI2.s:20     .text:0000000000000004 .L0 
     /tmp/ccRNrOI2.s:23     .text:000000000000000c .L0 
     /tmp/ccRNrOI2.s:24     .text:000000000000000c .L0 
     /tmp/ccRNrOI2.s:26     .text:0000000000000010 .L0 
     /tmp/ccRNrOI2.s:29     .text:0000000000000010 .L0 
     /tmp/ccRNrOI2.s:30     .text:0000000000000010 .L0 
     /tmp/ccRNrOI2.s:31     .text:0000000000000010 .L0 
     /tmp/ccRNrOI2.s:35     .text:0000000000000020 .L0 
     /tmp/ccRNrOI2.s:36     .text:0000000000000024 .L0 
     /tmp/ccRNrOI2.s:42     .text:0000000000000024 _Z6semincv
     /tmp/ccRNrOI2.s:45     .text:0000000000000024 .L0 
     /tmp/ccRNrOI2.s:46     .text:0000000000000024 .L0 
     /tmp/ccRNrOI2.s:47     .text:0000000000000028 .L0 
     /tmp/ccRNrOI2.s:52     .text:0000000000000038 .L0 
     /tmp/ccRNrOI2.s:53     .text:0000000000000038 .L0 
     /tmp/ccRNrOI2.s:54     .text:0000000000000038 .L0 
     /tmp/ccRNrOI2.s:55     .text:0000000000000038 .L0 
     /tmp/ccRNrOI2.s:57     .text:000000000000003c .L0 
     /tmp/ccRNrOI2.s:61     .text:000000000000003c .L0 
     /tmp/ccRNrOI2.s:62     .text:000000000000003c .L0 
     /tmp/ccRNrOI2.s:66     .text:0000000000000040 .L0 
     /tmp/ccRNrOI2.s:69     .text:0000000000000048 .L0 
     /tmp/ccRNrOI2.s:70     .text:0000000000000048 .L0 
     /tmp/ccRNrOI2.s:74     .text:0000000000000054 .L0 
     /tmp/ccRNrOI2.s:75     .text:0000000000000054 .L0 
     /tmp/ccRNrOI2.s:80     .text:0000000000000068 .L0 
     /tmp/ccRNrOI2.s:81     .text:0000000000000068 .L0 
     /tmp/ccRNrOI2.s:85     .text:0000000000000074 .L0 
     /tmp/ccRNrOI2.s:86     .text:0000000000000074 .L0 
     /tmp/ccRNrOI2.s:90     .text:0000000000000080 .L0 
     /tmp/ccRNrOI2.s:91     .text:0000000000000080 .L0 
     /tmp/ccRNrOI2.s:95     .text:000000000000008c .L0 
     /tmp/ccRNrOI2.s:101    .text:0000000000000094 .L0 
     /tmp/ccRNrOI2.s:102    .text:0000000000000098 .L0 
     /tmp/ccRNrOI2.s:104    .text:000000000000009c .L0 
     /tmp/ccRNrOI2.s:105    .text:000000000000009c .L0 
     /tmp/ccRNrOI2.s:107    .text:00000000000000a0 .L0 
     /tmp/ccRNrOI2.s:110    .text:00000000000000a4 .L0 
     /tmp/ccRNrOI2.s:112    .text:00000000000000a8 .L0 
     /tmp/ccRNrOI2.s:114    .text:00000000000000ac .L0 
     /tmp/ccRNrOI2.s:120    .text:00000000000000ac _Z6semdecv
     /tmp/ccRNrOI2.s:123    .text:00000000000000ac .L0 
     /tmp/ccRNrOI2.s:124    .text:00000000000000ac .L0 
     /tmp/ccRNrOI2.s:125    .text:00000000000000b0 .L0 
     /tmp/ccRNrOI2.s:130    .text:00000000000000c0 .L0 
     /tmp/ccRNrOI2.s:131    .text:00000000000000c0 .L0 
     /tmp/ccRNrOI2.s:132    .text:00000000000000c0 .L0 
     /tmp/ccRNrOI2.s:133    .text:00000000000000c0 .L0 
     /tmp/ccRNrOI2.s:135    .text:00000000000000c4 .L0 
     /tmp/ccRNrOI2.s:139    .text:00000000000000c4 .L0 
     /tmp/ccRNrOI2.s:140    .text:00000000000000c4 .L0 
     /tmp/ccRNrOI2.s:144    .text:00000000000000c8 .L0 
GAS LISTING /tmp/ccRNrOI2.s 			page 26


     /tmp/ccRNrOI2.s:147    .text:00000000000000d0 .L0 
     /tmp/ccRNrOI2.s:148    .text:00000000000000d0 .L0 
     /tmp/ccRNrOI2.s:152    .text:00000000000000dc .L0 
     /tmp/ccRNrOI2.s:153    .text:00000000000000dc .L0 
     /tmp/ccRNrOI2.s:158    .text:00000000000000f0 .L0 
     /tmp/ccRNrOI2.s:159    .text:00000000000000f0 .L0 
     /tmp/ccRNrOI2.s:163    .text:00000000000000fc .L0 
     /tmp/ccRNrOI2.s:164    .text:00000000000000fc .L0 
     /tmp/ccRNrOI2.s:168    .text:0000000000000108 .L0 
     /tmp/ccRNrOI2.s:169    .text:0000000000000108 .L0 
     /tmp/ccRNrOI2.s:173    .text:0000000000000114 .L0 
     /tmp/ccRNrOI2.s:179    .text:000000000000011c .L0 
     /tmp/ccRNrOI2.s:180    .text:0000000000000120 .L0 
     /tmp/ccRNrOI2.s:182    .text:0000000000000124 .L0 
     /tmp/ccRNrOI2.s:183    .text:0000000000000124 .L0 
     /tmp/ccRNrOI2.s:185    .text:0000000000000128 .L0 
     /tmp/ccRNrOI2.s:188    .text:000000000000012c .L0 
     /tmp/ccRNrOI2.s:190    .text:0000000000000130 .L0 
     /tmp/ccRNrOI2.s:192    .text:0000000000000134 .L0 
     /tmp/ccRNrOI2.s:221    .text:0000000000000134 _Z5main1v
     /tmp/ccRNrOI2.s:224    .text:0000000000000134 .L0 
     /tmp/ccRNrOI2.s:225    .text:0000000000000134 .L0 
     /tmp/ccRNrOI2.s:226    .text:0000000000000138 .L0 
     /tmp/ccRNrOI2.s:231    .text:0000000000000148 .L0 
     /tmp/ccRNrOI2.s:232    .text:0000000000000148 .L0 
     /tmp/ccRNrOI2.s:233    .text:0000000000000148 .L0 
     /tmp/ccRNrOI2.s:234    .text:0000000000000148 .L0 
     /tmp/ccRNrOI2.s:236    .text:000000000000014c .L0 
     /tmp/ccRNrOI2.s:238    .text:000000000000014c .L0 
     /tmp/ccRNrOI2.s:239    .text:000000000000014c .L0 
     /tmp/ccRNrOI2.s:245    .text:0000000000000154 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000154 .L0 
     /tmp/ccRNrOI2.s:257    .text:0000000000000158 .L0 
     /tmp/ccRNrOI2.s:258    .text:0000000000000158 .L0 
     /tmp/ccRNrOI2.s:259    .text:0000000000000158 .L0 
     /tmp/ccRNrOI2.s:269    .text:0000000000000160 .L0 
     /tmp/ccRNrOI2.s:270    .text:0000000000000160 .L0 
     /tmp/ccRNrOI2.s:271    .text:0000000000000160 .L0 
     /tmp/ccRNrOI2.s:276    .text:0000000000000170 .L0 
     /tmp/ccRNrOI2.s:278    .text:0000000000000174 .L0 
     /tmp/ccRNrOI2.s:279    .text:0000000000000174 .L0 
     /tmp/ccRNrOI2.s:283    .text:0000000000000184 .L0 
     /tmp/ccRNrOI2.s:284    .text:0000000000000184 .L0 
     /tmp/ccRNrOI2.s:288    .text:0000000000000194 .L0 
     /tmp/ccRNrOI2.s:289    .text:0000000000000194 .L0 
     /tmp/ccRNrOI2.s:294    .text:00000000000001a8 .L0 
     /tmp/ccRNrOI2.s:297    .text:00000000000001b4 .L0 
     /tmp/ccRNrOI2.s:298    .text:00000000000001b4 .L0 
     /tmp/ccRNrOI2.s:302    .text:00000000000001c4 .L0 
     /tmp/ccRNrOI2.s:303    .text:00000000000001c4 .L0 
     /tmp/ccRNrOI2.s:308    .text:00000000000001d8 .L0 
     /tmp/ccRNrOI2.s:310    .text:00000000000001dc .L0 
     /tmp/ccRNrOI2.s:311    .text:00000000000001dc .L0 
     /tmp/ccRNrOI2.s:315    .text:00000000000001ec .L0 
     /tmp/ccRNrOI2.s:316    .text:00000000000001ec .L0 
     /tmp/ccRNrOI2.s:321    .text:0000000000000200 .L0 
     /tmp/ccRNrOI2.s:323    .text:0000000000000204 .L0 
GAS LISTING /tmp/ccRNrOI2.s 			page 27


     /tmp/ccRNrOI2.s:324    .text:0000000000000204 .L0 
     /tmp/ccRNrOI2.s:328    .text:0000000000000214 .L0 
     /tmp/ccRNrOI2.s:329    .text:0000000000000214 .L0 
     /tmp/ccRNrOI2.s:334    .text:0000000000000228 .L0 
     /tmp/ccRNrOI2.s:336    .text:000000000000022c .L0 
     /tmp/ccRNrOI2.s:337    .text:000000000000022c .L0 
     /tmp/ccRNrOI2.s:341    .text:000000000000023c .L0 
     /tmp/ccRNrOI2.s:342    .text:000000000000023c .L0 
     /tmp/ccRNrOI2.s:347    .text:0000000000000250 .L0 
     /tmp/ccRNrOI2.s:349    .text:0000000000000254 .L0 
     /tmp/ccRNrOI2.s:350    .text:0000000000000254 .L0 
     /tmp/ccRNrOI2.s:356    .text:0000000000000268 .L0 
     /tmp/ccRNrOI2.s:357    .text:0000000000000268 .L0 
     /tmp/ccRNrOI2.s:362    .text:0000000000000274 .L0 
     /tmp/ccRNrOI2.s:363    .text:0000000000000274 .L0 
     /tmp/ccRNrOI2.s:364    .text:0000000000000274 .L0 
     /tmp/ccRNrOI2.s:370    .text:0000000000000278 .L0 
     /tmp/ccRNrOI2.s:371    .text:0000000000000278 .L0 
     /tmp/ccRNrOI2.s:376    .text:000000000000027c .L0 
     /tmp/ccRNrOI2.s:378    .text:0000000000000280 .L0 
     /tmp/ccRNrOI2.s:383    .text:0000000000000284 .L0 
     /tmp/ccRNrOI2.s:384    .text:0000000000000284 .L0 
     /tmp/ccRNrOI2.s:389    .text:0000000000000288 .L0 
     /tmp/ccRNrOI2.s:391    .text:000000000000028c .L0 
     /tmp/ccRNrOI2.s:396    .text:0000000000000290 .L0 
     /tmp/ccRNrOI2.s:397    .text:0000000000000290 .L0 
     /tmp/ccRNrOI2.s:402    .text:0000000000000294 .L0 
     /tmp/ccRNrOI2.s:404    .text:0000000000000298 .L0 
     /tmp/ccRNrOI2.s:409    .text:000000000000029c .L0 
     /tmp/ccRNrOI2.s:410    .text:000000000000029c .L0 
     /tmp/ccRNrOI2.s:415    .text:00000000000002a0 .L0 
     /tmp/ccRNrOI2.s:422    .text:00000000000002ac .L0 
     /tmp/ccRNrOI2.s:427    .text:00000000000002b8 .L0 
     /tmp/ccRNrOI2.s:431    .text:00000000000002bc .L0 
     /tmp/ccRNrOI2.s:435    .text:00000000000002c4 .L0 
     /tmp/ccRNrOI2.s:436    .text:00000000000002c4 .L0 
     /tmp/ccRNrOI2.s:438    .text:00000000000002c8 .L0 
     /tmp/ccRNrOI2.s:443    .text:00000000000002cc .L0 
     /tmp/ccRNrOI2.s:444    .text:00000000000002cc .L0 
     /tmp/ccRNrOI2.s:446    .text:00000000000002d0 .L0 
     /tmp/ccRNrOI2.s:448    .text:00000000000002d4 .L0 
     /tmp/ccRNrOI2.s:457    .text:00000000000002e0 .L0 
     /tmp/ccRNrOI2.s:458    .text:00000000000002e0 .L0 
     /tmp/ccRNrOI2.s:462    .text:00000000000002f0 .L0 
     /tmp/ccRNrOI2.s:463    .text:00000000000002f0 .L0 
     /tmp/ccRNrOI2.s:465    .text:00000000000002f8 .L0 
     /tmp/ccRNrOI2.s:467    .text:00000000000002fc .L0 
     /tmp/ccRNrOI2.s:468    .text:00000000000002fc .L0 
     /tmp/ccRNrOI2.s:470    .text:0000000000000300 .L0 
     /tmp/ccRNrOI2.s:473    .text:0000000000000304 .L0 
     /tmp/ccRNrOI2.s:475    .text:0000000000000308 .L0 
     /tmp/ccRNrOI2.s:477    .text:000000000000030c .L0 
     /tmp/ccRNrOI2.s:483    .text:000000000000030c main
     /tmp/ccRNrOI2.s:486    .text:000000000000030c .L0 
     /tmp/ccRNrOI2.s:487    .text:000000000000030c .L0 
     /tmp/ccRNrOI2.s:488    .text:0000000000000310 .L0 
     /tmp/ccRNrOI2.s:493    .text:0000000000000320 .L0 
GAS LISTING /tmp/ccRNrOI2.s 			page 28


     /tmp/ccRNrOI2.s:494    .text:0000000000000320 .L0 
     /tmp/ccRNrOI2.s:495    .text:0000000000000320 .L0 
     /tmp/ccRNrOI2.s:496    .text:0000000000000320 .L0 
     /tmp/ccRNrOI2.s:498    .text:0000000000000324 .L0 
     /tmp/ccRNrOI2.s:500    .text:0000000000000324 .L0 
     /tmp/ccRNrOI2.s:501    .text:0000000000000324 .L0 
     /tmp/ccRNrOI2.s:505    .text:0000000000000330 .L0 
     /tmp/ccRNrOI2.s:506    .text:0000000000000330 .L0 
     /tmp/ccRNrOI2.s:510    .text:000000000000033c .L0 
     /tmp/ccRNrOI2.s:511    .text:000000000000033c .L0 
     /tmp/ccRNrOI2.s:516    .text:0000000000000344 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000344 .L0 
     /tmp/ccRNrOI2.s:526    .text:0000000000000348 .L0 
     /tmp/ccRNrOI2.s:527    .text:0000000000000348 .L0 
     /tmp/ccRNrOI2.s:531    .text:0000000000000354 .L0 
     /tmp/ccRNrOI2.s:532    .text:0000000000000354 .L0 
     /tmp/ccRNrOI2.s:538    .text:0000000000000360 .L0 
     /tmp/ccRNrOI2.s:539    .text:0000000000000360 .L0 
     /tmp/ccRNrOI2.s:540    .text:0000000000000360 .L0 
     /tmp/ccRNrOI2.s:550    .text:0000000000000368 .L0 
     /tmp/ccRNrOI2.s:551    .text:0000000000000368 .L0 
     /tmp/ccRNrOI2.s:555    .text:0000000000000374 .L0 
     /tmp/ccRNrOI2.s:556    .text:0000000000000374 .L0 
     /tmp/ccRNrOI2.s:560    .text:0000000000000380 .L0 
     /tmp/ccRNrOI2.s:561    .text:0000000000000380 .L0 
     /tmp/ccRNrOI2.s:562    .text:0000000000000380 .L0 
     /tmp/ccRNrOI2.s:567    .text:0000000000000390 .L0 
     /tmp/ccRNrOI2.s:569    .text:0000000000000394 .L0 
     /tmp/ccRNrOI2.s:570    .text:0000000000000394 .L0 
     /tmp/ccRNrOI2.s:574    .text:00000000000003a4 .L0 
     /tmp/ccRNrOI2.s:575    .text:00000000000003a4 .L0 
     /tmp/ccRNrOI2.s:579    .text:00000000000003b4 .L0 
     /tmp/ccRNrOI2.s:580    .text:00000000000003b4 .L0 
     /tmp/ccRNrOI2.s:585    .text:00000000000003c8 .L0 
     /tmp/ccRNrOI2.s:588    .text:00000000000003d4 .L0 
     /tmp/ccRNrOI2.s:589    .text:00000000000003d4 .L0 
     /tmp/ccRNrOI2.s:593    .text:00000000000003e4 .L0 
     /tmp/ccRNrOI2.s:594    .text:00000000000003e4 .L0 
     /tmp/ccRNrOI2.s:601    .text:00000000000003f0 .L0 
     /tmp/ccRNrOI2.s:608    .text:00000000000003f8 .L0 
     /tmp/ccRNrOI2.s:616    .text:0000000000000400 .L0 
     /tmp/ccRNrOI2.s:619    .text:000000000000040c .L0 
     /tmp/ccRNrOI2.s:620    .text:000000000000040c .L0 
     /tmp/ccRNrOI2.s:626    .text:0000000000000418 .L0 
     /tmp/ccRNrOI2.s:631    .text:000000000000041c .L0 
     /tmp/ccRNrOI2.s:639    .text:0000000000000424 .L0 
     /tmp/ccRNrOI2.s:641    .text:0000000000000428 .L0 
     /tmp/ccRNrOI2.s:642    .text:0000000000000428 .L0 
     /tmp/ccRNrOI2.s:647    .text:000000000000043c .L0 
     /tmp/ccRNrOI2.s:649    .text:0000000000000440 .L0 
     /tmp/ccRNrOI2.s:650    .text:0000000000000440 .L0 
     /tmp/ccRNrOI2.s:654    .text:0000000000000450 .L0 
     /tmp/ccRNrOI2.s:655    .text:0000000000000450 .L0 
     /tmp/ccRNrOI2.s:660    .text:0000000000000464 .L0 
     /tmp/ccRNrOI2.s:662    .text:0000000000000468 .L0 
     /tmp/ccRNrOI2.s:663    .text:0000000000000468 .L0 
     /tmp/ccRNrOI2.s:668    .text:0000000000000478 .L0 
GAS LISTING /tmp/ccRNrOI2.s 			page 29


     /tmp/ccRNrOI2.s:669    .text:0000000000000478 .L0 
     /tmp/ccRNrOI2.s:670    .text:0000000000000478 .L0 
     /tmp/ccRNrOI2.s:675    .text:000000000000047c .L0 
     /tmp/ccRNrOI2.s:676    .text:000000000000047c .L0 
     /tmp/ccRNrOI2.s:681    .text:0000000000000480 .L0 
     /tmp/ccRNrOI2.s:683    .text:0000000000000484 .L0 
     /tmp/ccRNrOI2.s:688    .text:0000000000000488 .L0 
     /tmp/ccRNrOI2.s:689    .text:0000000000000488 .L0 
     /tmp/ccRNrOI2.s:694    .text:000000000000048c .L0 
     /tmp/ccRNrOI2.s:701    .text:0000000000000498 .L0 
     /tmp/ccRNrOI2.s:706    .text:00000000000004a4 .L0 
     /tmp/ccRNrOI2.s:710    .text:00000000000004a8 .L0 
     /tmp/ccRNrOI2.s:714    .text:00000000000004b0 .L0 
     /tmp/ccRNrOI2.s:715    .text:00000000000004b0 .L0 
     /tmp/ccRNrOI2.s:717    .text:00000000000004b4 .L0 
     /tmp/ccRNrOI2.s:722    .text:00000000000004b8 .L0 
     /tmp/ccRNrOI2.s:723    .text:00000000000004b8 .L0 
     /tmp/ccRNrOI2.s:725    .text:00000000000004bc .L0 
     /tmp/ccRNrOI2.s:727    .text:00000000000004c0 .L0 
     /tmp/ccRNrOI2.s:736    .text:00000000000004cc .L0 
     /tmp/ccRNrOI2.s:737    .text:00000000000004cc .L0 
     /tmp/ccRNrOI2.s:741    .text:00000000000004dc .L0 
     /tmp/ccRNrOI2.s:742    .text:00000000000004dc .L0 
     /tmp/ccRNrOI2.s:744    .text:00000000000004e4 .L0 
     /tmp/ccRNrOI2.s:746    .text:00000000000004e8 .L0 
     /tmp/ccRNrOI2.s:747    .text:00000000000004e8 .L0 
     /tmp/ccRNrOI2.s:749    .text:00000000000004ec .L0 
     /tmp/ccRNrOI2.s:752    .text:00000000000004f0 .L0 
     /tmp/ccRNrOI2.s:754    .text:00000000000004f4 .L0 
     /tmp/ccRNrOI2.s:756    .text:00000000000004f8 .L0 
     /tmp/ccRNrOI2.s:762    .text:00000000000004f8 _Z5main3v
     /tmp/ccRNrOI2.s:765    .text:00000000000004f8 .L0 
     /tmp/ccRNrOI2.s:766    .text:00000000000004f8 .L0 
     /tmp/ccRNrOI2.s:767    .text:00000000000004fc .L0 
     /tmp/ccRNrOI2.s:770    .text:0000000000000504 .L0 
     /tmp/ccRNrOI2.s:771    .text:0000000000000504 .L0 
     /tmp/ccRNrOI2.s:773    .text:0000000000000508 .L0 
     /tmp/ccRNrOI2.s:775    .text:0000000000000508 .L0 
     /tmp/ccRNrOI2.s:776    .text:0000000000000508 .L0 
     /tmp/ccRNrOI2.s:780    .text:0000000000000514 .L0 
     /tmp/ccRNrOI2.s:781    .text:0000000000000514 .L0 
     /tmp/ccRNrOI2.s:785    .text:0000000000000520 .L0 
     /tmp/ccRNrOI2.s:786    .text:0000000000000520 .L0 
     /tmp/ccRNrOI2.s:791    .text:0000000000000528 .L0 
  src/../h/riscv.hpp:103    .text:0000000000000528 .L0 
     /tmp/ccRNrOI2.s:801    .text:000000000000052c .L0 
     /tmp/ccRNrOI2.s:802    .text:000000000000052c .L0 
     /tmp/ccRNrOI2.s:806    .text:0000000000000538 .L0 
     /tmp/ccRNrOI2.s:807    .text:0000000000000538 .L0 
     /tmp/ccRNrOI2.s:813    .text:0000000000000544 .L0 
     /tmp/ccRNrOI2.s:814    .text:0000000000000544 .L0 
     /tmp/ccRNrOI2.s:815    .text:0000000000000544 .L0 
     /tmp/ccRNrOI2.s:825    .text:000000000000054c .L0 
     /tmp/ccRNrOI2.s:826    .text:000000000000054c .L0 
     /tmp/ccRNrOI2.s:830    .text:0000000000000558 .L0 
     /tmp/ccRNrOI2.s:831    .text:0000000000000558 .L0 
     /tmp/ccRNrOI2.s:835    .text:0000000000000564 .L0 
GAS LISTING /tmp/ccRNrOI2.s 			page 30


     /tmp/ccRNrOI2.s:836    .text:0000000000000564 .L0 
     /tmp/ccRNrOI2.s:838    .text:000000000000056c .L0 
     /tmp/ccRNrOI2.s:840    .text:0000000000000570 .L0 
     /tmp/ccRNrOI2.s:841    .text:0000000000000570 .L0 
     /tmp/ccRNrOI2.s:843    .text:0000000000000574 .L0 
     /tmp/ccRNrOI2.s:845    .text:0000000000000578 .L0 
     /tmp/ccRNrOI2.s:859    .bss:0000000000000008 sem2
     /tmp/ccRNrOI2.s:855    .bss:0000000000000000 sem1
     /tmp/ccRNrOI2.s:852    .bss:0000000000000000 .LANCHOR0
     /tmp/ccRNrOI2.s:866    .text:0000000000000578 .L0 
     /tmp/ccRNrOI2.s:8      .rodata.str1.8:0000000000000000 .LC0
     /tmp/ccRNrOI2.s:31     .text:0000000000000010 .L0 
     /tmp/ccRNrOI2.s:75     .text:0000000000000054 .L0 
     /tmp/ccRNrOI2.s:153    .text:00000000000000dc .L0 
     /tmp/ccRNrOI2.s:239    .text:000000000000014c .L0 
     /tmp/ccRNrOI2.s:197    .rodata.str1.8:0000000000000008 .LC1
     /tmp/ccRNrOI2.s:279    .text:0000000000000174 .L0 
     /tmp/ccRNrOI2.s:285    .text:0000000000000188 .L0 
     /tmp/ccRNrOI2.s:289    .text:0000000000000194 .L0 
     /tmp/ccRNrOI2.s:294    .text:00000000000001a8 .L0 
     /tmp/ccRNrOI2.s:200    .rodata.str1.8:0000000000000020 .LC2
     /tmp/ccRNrOI2.s:298    .text:00000000000001b4 .L0 
     /tmp/ccRNrOI2.s:303    .text:00000000000001c4 .L0 
     /tmp/ccRNrOI2.s:203    .rodata.str1.8:0000000000000038 .LC3
     /tmp/ccRNrOI2.s:311    .text:00000000000001dc .L0 
     /tmp/ccRNrOI2.s:316    .text:00000000000001ec .L0 
     /tmp/ccRNrOI2.s:206    .rodata.str1.8:0000000000000050 .LC4
     /tmp/ccRNrOI2.s:324    .text:0000000000000204 .L0 
     /tmp/ccRNrOI2.s:329    .text:0000000000000214 .L0 
     /tmp/ccRNrOI2.s:209    .rodata.str1.8:0000000000000068 .LC5
     /tmp/ccRNrOI2.s:337    .text:000000000000022c .L0 
     /tmp/ccRNrOI2.s:342    .text:000000000000023c .L0 
     /tmp/ccRNrOI2.s:212    .rodata.str1.8:0000000000000080 .LC6
     /tmp/ccRNrOI2.s:350    .text:0000000000000254 .L0 
     /tmp/ccRNrOI2.s:215    .rodata.str1.8:0000000000000098 .LC7
     /tmp/ccRNrOI2.s:458    .text:00000000000002e0 .L0 
     /tmp/ccRNrOI2.s:511    .text:000000000000033c .L0 
     /tmp/ccRNrOI2.s:570    .text:0000000000000394 .L0 
     /tmp/ccRNrOI2.s:576    .text:00000000000003a8 .L0 
     /tmp/ccRNrOI2.s:580    .text:00000000000003b4 .L0 
     /tmp/ccRNrOI2.s:585    .text:00000000000003c8 .L0 
     /tmp/ccRNrOI2.s:589    .text:00000000000003d4 .L0 
     /tmp/ccRNrOI2.s:616    .text:0000000000000400 .L0 
     /tmp/ccRNrOI2.s:642    .text:0000000000000428 .L0 
     /tmp/ccRNrOI2.s:650    .text:0000000000000440 .L0 
     /tmp/ccRNrOI2.s:655    .text:0000000000000450 .L0 
     /tmp/ccRNrOI2.s:663    .text:0000000000000468 .L0 
     /tmp/ccRNrOI2.s:737    .text:00000000000004cc .L0 
     /tmp/ccRNrOI2.s:786    .text:0000000000000520 .L0 
     /tmp/ccRNrOI2.s:27     .text:0000000000000010 .L2
     /tmp/ccRNrOI2.s:98     .text:0000000000000094 .L4
     /tmp/ccRNrOI2.s:64     .text:0000000000000040 .L6
     /tmp/ccRNrOI2.s:176    .text:000000000000011c .L8
     /tmp/ccRNrOI2.s:142    .text:00000000000000c8 .L10
     /tmp/ccRNrOI2.s:360    .text:0000000000000274 .L15
     /tmp/ccRNrOI2.s:354    .text:0000000000000268 .L13
     /tmp/ccRNrOI2.s:429    .text:00000000000002bc .L14
GAS LISTING /tmp/ccRNrOI2.s 			page 31


     /tmp/ccRNrOI2.s:452    .text:00000000000002e0 .L16
     /tmp/ccRNrOI2.s:425    .text:00000000000002b8 .L17
     /tmp/ccRNrOI2.s:419    .text:00000000000002ac .L18
     /tmp/ccRNrOI2.s:666    .text:0000000000000478 .L22
     /tmp/ccRNrOI2.s:708    .text:00000000000004a8 .L27
     /tmp/ccRNrOI2.s:731    .text:00000000000004cc .L24
     /tmp/ccRNrOI2.s:704    .text:00000000000004a4 .L25
     /tmp/ccRNrOI2.s:698    .text:0000000000000498 .L26
     /tmp/ccRNrOI2.s:2888   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccRNrOI2.s:4504   .debug_str:00000000000008c0 .LASF182
     /tmp/ccRNrOI2.s:4294   .debug_str:00000000000002ee .LASF183
     /tmp/ccRNrOI2.s:4378   .debug_str:000000000000053b .LASF184
     /tmp/ccRNrOI2.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccRNrOI2.s:862    .text:0000000000000578 .Letext0
     /tmp/ccRNrOI2.s:4200   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccRNrOI2.s:4322   .debug_str:00000000000003a7 .LASF0
     /tmp/ccRNrOI2.s:4346   .debug_str:0000000000000471 .LASF1
     /tmp/ccRNrOI2.s:4434   .debug_str:00000000000006c8 .LASF2
     /tmp/ccRNrOI2.s:4446   .debug_str:000000000000072c .LASF4
     /tmp/ccRNrOI2.s:4330   .debug_str:00000000000003db .LASF3
     /tmp/ccRNrOI2.s:4220   .debug_str:0000000000000090 .LASF5
     /tmp/ccRNrOI2.s:4410   .debug_str:0000000000000624 .LASF6
     /tmp/ccRNrOI2.s:4400   .debug_str:00000000000005c9 .LASF7
     /tmp/ccRNrOI2.s:4338   .debug_str:0000000000000436 .LASF8
     /tmp/ccRNrOI2.s:4300   .debug_str:0000000000000305 .LASF9
     /tmp/ccRNrOI2.s:4306   .debug_str:000000000000033d .LASF10
     /tmp/ccRNrOI2.s:4246   .debug_str:0000000000000161 .LASF11
     /tmp/ccRNrOI2.s:4292   .debug_str:00000000000002df .LASF12
     /tmp/ccRNrOI2.s:4262   .debug_str:00000000000001da .LASF13
     /tmp/ccRNrOI2.s:4244   .debug_str:0000000000000151 .LASF14
     /tmp/ccRNrOI2.s:4488   .debug_str:0000000000000851 .LASF15
     /tmp/ccRNrOI2.s:4278   .debug_str:0000000000000245 .LASF16
     /tmp/ccRNrOI2.s:4470   .debug_str:00000000000007c9 .LASF17
     /tmp/ccRNrOI2.s:4548   .debug_str:0000000000000a83 .LASF37
     /tmp/ccRNrOI2.s:4526   .debug_str:0000000000000a06 .LASF185
     /tmp/ccRNrOI2.s:4478   .debug_str:0000000000000805 .LASF18
     /tmp/ccRNrOI2.s:4384   .debug_str:0000000000000575 .LASF19
     /tmp/ccRNrOI2.s:4376   .debug_str:0000000000000536 .LASF20
     /tmp/ccRNrOI2.s:4472   .debug_str:00000000000007df .LASF25
     /tmp/ccRNrOI2.s:4288   .debug_str:00000000000002b1 .LASF22
     /tmp/ccRNrOI2.s:4436   .debug_str:00000000000006d6 .LASF145
     /tmp/ccRNrOI2.s:4424   .debug_str:0000000000000679 .LASF147
     /tmp/ccRNrOI2.s:4442   .debug_str:0000000000000714 .LASF21
     /tmp/ccRNrOI2.s:4480   .debug_str:000000000000080a .LASF23
     /tmp/ccRNrOI2.s:4342   .debug_str:000000000000045c .LASF24
     /tmp/ccRNrOI2.s:4238   .debug_str:000000000000011a .LASF26
     /tmp/ccRNrOI2.s:4362   .debug_str:00000000000004d7 .LASF27
     /tmp/ccRNrOI2.s:4280   .debug_str:000000000000025b .LASF28
     /tmp/ccRNrOI2.s:4398   .debug_str:00000000000005bd .LASF29
     /tmp/ccRNrOI2.s:4550   .debug_str:0000000000000a8d .LASF30
     /tmp/ccRNrOI2.s:4584   .debug_str:0000000000000bac .LASF31
     /tmp/ccRNrOI2.s:4574   .debug_str:0000000000000b5b .LASF32
     /tmp/ccRNrOI2.s:4460   .debug_str:0000000000000788 .LASF33
     /tmp/ccRNrOI2.s:4336   .debug_str:0000000000000419 .LASF34
     /tmp/ccRNrOI2.s:4420   .debug_str:0000000000000662 .LASF35
     /tmp/ccRNrOI2.s:4212   .debug_str:0000000000000038 .LASF36
     /tmp/ccRNrOI2.s:4492   .debug_str:0000000000000866 .LASF186
GAS LISTING /tmp/ccRNrOI2.s 			page 32


     /tmp/ccRNrOI2.s:4396   .debug_str:00000000000005b8 .LASF38
     /tmp/ccRNrOI2.s:4208   .debug_str:0000000000000023 .LASF39
     /tmp/ccRNrOI2.s:4464   .debug_str:000000000000079d .LASF40
     /tmp/ccRNrOI2.s:4512   .debug_str:00000000000009af .LASF41
     /tmp/ccRNrOI2.s:4510   .debug_str:00000000000009a5 .LASF42
     /tmp/ccRNrOI2.s:4468   .debug_str:00000000000007c0 .LASF43
     /tmp/ccRNrOI2.s:4490   .debug_str:000000000000085d .LASF44
     /tmp/ccRNrOI2.s:4318   .debug_str:000000000000037e .LASF187
     /tmp/ccRNrOI2.s:4444   .debug_str:0000000000000721 .LASF45
     /tmp/ccRNrOI2.s:4562   .debug_str:0000000000000aee .LASF46
     /tmp/ccRNrOI2.s:4486   .debug_str:0000000000000844 .LASF47
     /tmp/ccRNrOI2.s:4568   .debug_str:0000000000000b1b .LASF48
     /tmp/ccRNrOI2.s:4240   .debug_str:0000000000000137 .LASF49
     /tmp/ccRNrOI2.s:4498   .debug_str:000000000000088b .LASF50
     /tmp/ccRNrOI2.s:4494   .debug_str:000000000000086e .LASF51
     /tmp/ccRNrOI2.s:4380   .debug_str:0000000000000556 .LASF52
     /tmp/ccRNrOI2.s:4232   .debug_str:00000000000000e9 .LASF53
     /tmp/ccRNrOI2.s:4516   .debug_str:00000000000009cc .LASF54
     /tmp/ccRNrOI2.s:4350   .debug_str:000000000000048a .LASF55
     /tmp/ccRNrOI2.s:4530   .debug_str:0000000000000a15 .LASF56
     /tmp/ccRNrOI2.s:4372   .debug_str:0000000000000514 .LASF59
     /tmp/ccRNrOI2.s:4290   .debug_str:00000000000002c8 .LASF61
     /tmp/ccRNrOI2.s:4428   .debug_str:00000000000006a9 .LASF57
     /tmp/ccRNrOI2.s:4450   .debug_str:0000000000000738 .LASF58
     /tmp/ccRNrOI2.s:4272   .debug_str:0000000000000230 .LASF60
     /tmp/ccRNrOI2.s:4254   .debug_str:000000000000019f .LASF62
     /tmp/ccRNrOI2.s:4422   .debug_str:000000000000066b .LASF63
     /tmp/ccRNrOI2.s:4570   .debug_str:0000000000000b37 .LASF64
     /tmp/ccRNrOI2.s:4348   .debug_str:0000000000000484 .LASF65
     /tmp/ccRNrOI2.s:4508   .debug_str:0000000000000995 .LASF66
     /tmp/ccRNrOI2.s:4448   .debug_str:0000000000000733 .LASF67
     /tmp/ccRNrOI2.s:4216   .debug_str:000000000000007a .LASF68
     /tmp/ccRNrOI2.s:4500   .debug_str:00000000000008ab .LASF188
     /tmp/ccRNrOI2.s:4506   .debug_str:0000000000000984 .LASF69
     /tmp/ccRNrOI2.s:4224   .debug_str:00000000000000a2 .LASF70
     /tmp/ccRNrOI2.s:4236   .debug_str:000000000000010c .LASF116
     /tmp/ccRNrOI2.s:4352   .debug_str:0000000000000497 .LASF118
     /tmp/ccRNrOI2.s:4264   .debug_str:00000000000001ea .LASF189
     /tmp/ccRNrOI2.s:4214   .debug_str:0000000000000052 .LASF190
     /tmp/ccRNrOI2.s:4368   .debug_str:0000000000000505 .LASF71
     /tmp/ccRNrOI2.s:4552   .debug_str:0000000000000aab .LASF72
     /tmp/ccRNrOI2.s:4532   .debug_str:0000000000000a2e .LASF191
     /tmp/ccRNrOI2.s:4284   .debug_str:0000000000000292 .LASF73
     /tmp/ccRNrOI2.s:4502   .debug_str:00000000000008b3 .LASF74
     /tmp/ccRNrOI2.s:4268   .debug_str:0000000000000212 .LASF75
     /tmp/ccRNrOI2.s:4456   .debug_str:0000000000000768 .LASF76
     /tmp/ccRNrOI2.s:4282   .debug_str:0000000000000277 .LASF77
     /tmp/ccRNrOI2.s:4324   .debug_str:00000000000003b4 .LASF78
     /tmp/ccRNrOI2.s:4558   .debug_str:0000000000000acc .LASF79
     /tmp/ccRNrOI2.s:4312   .debug_str:000000000000035b .LASF80
     /tmp/ccRNrOI2.s:4320   .debug_str:000000000000038f .LASF81
     /tmp/ccRNrOI2.s:4522   .debug_str:00000000000009f7 .LASF83
     /tmp/ccRNrOI2.s:4514   .debug_str:00000000000009b7 .LASF85
     /tmp/ccRNrOI2.s:4430   .debug_str:00000000000006b4 .LASF82
     /tmp/ccRNrOI2.s:4392   .debug_str:000000000000059c .LASF88
     /tmp/ccRNrOI2.s:4414   .debug_str:0000000000000634 .LASF84
     /tmp/ccRNrOI2.s:4416   .debug_str:000000000000063b .LASF86
GAS LISTING /tmp/ccRNrOI2.s 			page 33


     /tmp/ccRNrOI2.s:4386   .debug_str:000000000000057a .LASF87
     /tmp/ccRNrOI2.s:4340   .debug_str:0000000000000449 .LASF89
     /tmp/ccRNrOI2.s:4560   .debug_str:0000000000000ae6 .LASF90
     /tmp/ccRNrOI2.s:4484   .debug_str:0000000000000830 .LASF91
     /tmp/ccRNrOI2.s:4382   .debug_str:000000000000056d .LASF92
     /tmp/ccRNrOI2.s:4390   .debug_str:0000000000000588 .LASF93
     /tmp/ccRNrOI2.s:4356   .debug_str:00000000000004bc .LASF94
     /tmp/ccRNrOI2.s:4418   .debug_str:000000000000064e .LASF95
     /tmp/ccRNrOI2.s:4580   .debug_str:0000000000000b9b .LASF96
     /tmp/ccRNrOI2.s:4328   .debug_str:00000000000003c7 .LASF97
     /tmp/ccRNrOI2.s:4482   .debug_str:0000000000000829 .LASF98
     /tmp/ccRNrOI2.s:4452   .debug_str:000000000000074e .LASF99
     /tmp/ccRNrOI2.s:4454   .debug_str:0000000000000761 .LASF100
     /tmp/ccRNrOI2.s:4252   .debug_str:000000000000018c .LASF101
     /tmp/ccRNrOI2.s:4276   .debug_str:000000000000023f .LASF102
     /tmp/ccRNrOI2.s:4316   .debug_str:000000000000036c .LASF103
     /tmp/ccRNrOI2.s:4326   .debug_str:00000000000003c1 .LASF104
     /tmp/ccRNrOI2.s:4270   .debug_str:000000000000021e .LASF105
     /tmp/ccRNrOI2.s:4222   .debug_str:0000000000000097 .LASF106
     /tmp/ccRNrOI2.s:4438   .debug_str:00000000000006e0 .LASF107
     /tmp/ccRNrOI2.s:4432   .debug_str:00000000000006bd .LASF108
     /tmp/ccRNrOI2.s:4576   .debug_str:0000000000000b76 .LASF109
     /tmp/ccRNrOI2.s:4554   .debug_str:0000000000000ab1 .LASF110
     /tmp/ccRNrOI2.s:4564   .debug_str:0000000000000af9 .LASF111
     /tmp/ccRNrOI2.s:4250   .debug_str:0000000000000182 .LASF112
     /tmp/ccRNrOI2.s:4374   .debug_str:0000000000000520 .LASF113
     /tmp/ccRNrOI2.s:4520   .debug_str:00000000000009e8 .LASF114
     /tmp/ccRNrOI2.s:4304   .debug_str:0000000000000321 .LASF115
     /tmp/ccRNrOI2.s:4402   .debug_str:00000000000005dc .LASF117
     /tmp/ccRNrOI2.s:4334   .debug_str:00000000000003f7 .LASF119
     /tmp/ccRNrOI2.s:4528   .debug_str:0000000000000a0b .LASF120
     /tmp/ccRNrOI2.s:4360   .debug_str:00000000000004ca .LASF121
     /tmp/ccRNrOI2.s:4546   .debug_str:0000000000000a79 .LASF122
     /tmp/ccRNrOI2.s:4266   .debug_str:00000000000001f8 .LASF123
     /tmp/ccRNrOI2.s:4354   .debug_str:00000000000004b0 .LASF124
     /tmp/ccRNrOI2.s:4226   .debug_str:00000000000000b4 .LASF125
     /tmp/ccRNrOI2.s:4412   .debug_str:000000000000062b .LASF126
     /tmp/ccRNrOI2.s:4406   .debug_str:00000000000005fb .LASF127
     /tmp/ccRNrOI2.s:4242   .debug_str:0000000000000148 .LASF128
     /tmp/ccRNrOI2.s:4426   .debug_str:0000000000000690 .LASF129
     /tmp/ccRNrOI2.s:4496   .debug_str:0000000000000879 .LASF130
     /tmp/ccRNrOI2.s:4314   .debug_str:0000000000000366 .LASF131
     /tmp/ccRNrOI2.s:4234   .debug_str:00000000000000f5 .LASF132
     /tmp/ccRNrOI2.s:4206   .debug_str:0000000000000018 .LASF133
     /tmp/ccRNrOI2.s:4458   .debug_str:0000000000000776 .LASF134
     /tmp/ccRNrOI2.s:4582   .debug_str:0000000000000ba3 .LASF135
     /tmp/ccRNrOI2.s:4542   .debug_str:0000000000000a59 .LASF136
     /tmp/ccRNrOI2.s:4308   .debug_str:000000000000034b .LASF137
     /tmp/ccRNrOI2.s:4440   .debug_str:00000000000006f8 .LASF138
     /tmp/ccRNrOI2.s:4204   .debug_str:000000000000000a .LASF139
     /tmp/ccRNrOI2.s:4364   .debug_str:00000000000004df .LASF140
     /tmp/ccRNrOI2.s:4408   .debug_str:0000000000000618 .LASF141
     /tmp/ccRNrOI2.s:4466   .debug_str:00000000000007a3 .LASF142
     /tmp/ccRNrOI2.s:4518   .debug_str:00000000000009e3 .LASF143
     /tmp/ccRNrOI2.s:4310   .debug_str:0000000000000356 .LASF144
     /tmp/ccRNrOI2.s:4296   .debug_str:00000000000002fb .LASF158
     /tmp/ccRNrOI2.s:4230   .debug_str:00000000000000d6 .LASF159
GAS LISTING /tmp/ccRNrOI2.s 			page 34


     /tmp/ccRNrOI2.s:4538   .debug_str:0000000000000a4e .LASF146
     /tmp/ccRNrOI2.s:4332   .debug_str:00000000000003ed .LASF148
     /tmp/ccRNrOI2.s:763    .text:00000000000004f8 .LFB46
     /tmp/ccRNrOI2.s:846    .text:0000000000000578 .LFE46
     /tmp/ccRNrOI2.s:788    .text:0000000000000528 .LBB86
     /tmp/ccRNrOI2.s:799    .text:000000000000052c .LBE86
     /tmp/ccRNrOI2.s:811    .text:0000000000000544 .LBB88
     /tmp/ccRNrOI2.s:823    .text:000000000000054c .LBE88
     /tmp/ccRNrOI2.s:3999   .debug_loc:0000000000000000 .LLST22
     /tmp/ccRNrOI2.s:778    .text:0000000000000514 .LVL88
     /tmp/ccRNrOI2.s:783    .text:0000000000000520 .LVL89
     /tmp/ccRNrOI2.s:804    .text:0000000000000538 .LVL92
     /tmp/ccRNrOI2.s:809    .text:0000000000000544 .LVL93
     /tmp/ccRNrOI2.s:828    .text:0000000000000558 .LVL95
     /tmp/ccRNrOI2.s:833    .text:0000000000000564 .LVL96
     /tmp/ccRNrOI2.s:4298   .debug_str:0000000000000300 .LASF149
     /tmp/ccRNrOI2.s:484    .text:000000000000030c .LFB45
     /tmp/ccRNrOI2.s:757    .text:00000000000004f8 .LFE45
     /tmp/ccRNrOI2.s:4256   .debug_str:00000000000001b2 .LASF150
     /tmp/ccRNrOI2.s:699    .text:0000000000000498 .LBB83
     /tmp/ccRNrOI2.s:734    .text:00000000000004cc .LBE83
     /tmp/ccRNrOI2.s:4462   .debug_str:0000000000000793 .LASF151
     /tmp/ccRNrOI2.s:4007   .debug_loc:0000000000000024 .LLST19
     /tmp/ccRNrOI2.s:4474   .debug_str:00000000000007f2 .LASF152
     /tmp/ccRNrOI2.s:4302   .debug_str:0000000000000315 .LASF163
     /tmp/ccRNrOI2.s:4018   .debug_loc:000000000000005a .LLST20
     /tmp/ccRNrOI2.s:4202   .debug_str:0000000000000000 .LASF153
     /tmp/ccRNrOI2.s:719    .text:00000000000004b8 .LBB84
     /tmp/ccRNrOI2.s:733    .text:00000000000004cc .LBE84
     /tmp/ccRNrOI2.s:4025   .debug_loc:000000000000007d .LLST21
     /tmp/ccRNrOI2.s:728    .text:00000000000004c8 .LVL84
     /tmp/ccRNrOI2.s:703    .text:00000000000004a4 .LVL80
     /tmp/ccRNrOI2.s:513    .text:0000000000000344 .LBB67
     /tmp/ccRNrOI2.s:524    .text:0000000000000348 .LBE67
     /tmp/ccRNrOI2.s:536    .text:0000000000000360 .LBB69
     /tmp/ccRNrOI2.s:548    .text:0000000000000368 .LBE69
     /tmp/ccRNrOI2.s:4032   .debug_loc:00000000000000a0 .LLST10
     /tmp/ccRNrOI2.s:597    .text:00000000000003f0 .LBB71
     /tmp/ccRNrOI2.s:614    .text:0000000000000400 .LBE71
     /tmp/ccRNrOI2.s:4040   .debug_loc:00000000000000c4 .LLST11
     /tmp/ccRNrOI2.s:4048   .debug_loc:00000000000000e8 .LLST12
     /tmp/ccRNrOI2.s:604    .text:00000000000003f8 .LBB73
     /tmp/ccRNrOI2.s:612    .text:0000000000000400 .LBE73
     /tmp/ccRNrOI2.s:4055   .debug_loc:000000000000010b .LLST13
     /tmp/ccRNrOI2.s:623    .text:0000000000000418 .LBB75
     /tmp/ccRNrOI2.s:637    .text:0000000000000424 .LBE75
     /tmp/ccRNrOI2.s:4064   .debug_loc:0000000000000130 .LLST14
     /tmp/ccRNrOI2.s:4072   .debug_loc:0000000000000154 .LLST15
     /tmp/ccRNrOI2.s:628    .text:000000000000041c .LBB77
     /tmp/ccRNrOI2.s:635    .text:0000000000000424 .LBE77
     /tmp/ccRNrOI2.s:4079   .debug_loc:0000000000000177 .LLST16
     /tmp/ccRNrOI2.s:672    .text:000000000000047c .LBB79
     /tmp/ccRNrOI2.s:679    .text:0000000000000480 .LBE79
     /tmp/ccRNrOI2.s:4088   .debug_loc:000000000000019c .LLST17
     /tmp/ccRNrOI2.s:685    .text:0000000000000488 .LBB81
     /tmp/ccRNrOI2.s:692    .text:000000000000048c .LBE81
     /tmp/ccRNrOI2.s:4095   .debug_loc:00000000000001bf .LLST18
GAS LISTING /tmp/ccRNrOI2.s 			page 35


     /tmp/ccRNrOI2.s:503    .text:0000000000000330 .LVL52
     /tmp/ccRNrOI2.s:508    .text:000000000000033c .LVL53
     /tmp/ccRNrOI2.s:529    .text:0000000000000354 .LVL56
     /tmp/ccRNrOI2.s:534    .text:0000000000000360 .LVL57
     /tmp/ccRNrOI2.s:553    .text:0000000000000374 .LVL59
     /tmp/ccRNrOI2.s:558    .text:0000000000000380 .LVL60
     /tmp/ccRNrOI2.s:564    .text:000000000000038c .LVL61
     /tmp/ccRNrOI2.s:572    .text:00000000000003a4 .LVL62
     /tmp/ccRNrOI2.s:582    .text:00000000000003c4 .LVL63
     /tmp/ccRNrOI2.s:591    .text:00000000000003e4 .LVL64
     /tmp/ccRNrOI2.s:596    .text:00000000000003f0 .LVL65
     /tmp/ccRNrOI2.s:622    .text:0000000000000418 .LVL68
     /tmp/ccRNrOI2.s:644    .text:0000000000000438 .LVL71
     /tmp/ccRNrOI2.s:652    .text:0000000000000450 .LVL72
     /tmp/ccRNrOI2.s:657    .text:0000000000000460 .LVL73
     /tmp/ccRNrOI2.s:665    .text:0000000000000478 .LVL74
     /tmp/ccRNrOI2.s:739    .text:00000000000004dc .LVL86
     /tmp/ccRNrOI2.s:4544   .debug_str:0000000000000a72 .LASF154
     /tmp/ccRNrOI2.s:4536   .debug_str:0000000000000a43 .LASF155
     /tmp/ccRNrOI2.s:121    .text:00000000000000ac .LFB44
     /tmp/ccRNrOI2.s:193    .text:0000000000000134 .LFE44
     /tmp/ccRNrOI2.s:138    .text:00000000000000c4 .LBB51
     /tmp/ccRNrOI2.s:177    .text:000000000000011c .LBE51
     /tmp/ccRNrOI2.s:4102   .debug_loc:00000000000001e2 .LLST1
     /tmp/ccRNrOI2.s:150    .text:00000000000000dc .LVL12
     /tmp/ccRNrOI2.s:156    .text:00000000000000f0 .LVL13
     /tmp/ccRNrOI2.s:161    .text:00000000000000fc .LVL14
     /tmp/ccRNrOI2.s:166    .text:0000000000000108 .LVL15
     /tmp/ccRNrOI2.s:171    .text:0000000000000114 .LVL16
     /tmp/ccRNrOI2.s:4476   .debug_str:00000000000007fe .LASF156
     /tmp/ccRNrOI2.s:4572   .debug_str:0000000000000b50 .LASF157
     /tmp/ccRNrOI2.s:43     .text:0000000000000024 .LFB43
     /tmp/ccRNrOI2.s:115    .text:00000000000000ac .LFE43
     /tmp/ccRNrOI2.s:60     .text:000000000000003c .LBB50
     /tmp/ccRNrOI2.s:99     .text:0000000000000094 .LBE50
     /tmp/ccRNrOI2.s:4114   .debug_loc:0000000000000219 .LLST0
     /tmp/ccRNrOI2.s:72     .text:0000000000000054 .LVL3
     /tmp/ccRNrOI2.s:78     .text:0000000000000068 .LVL4
     /tmp/ccRNrOI2.s:83     .text:0000000000000074 .LVL5
     /tmp/ccRNrOI2.s:88     .text:0000000000000080 .LVL6
     /tmp/ccRNrOI2.s:93     .text:000000000000008c .LVL7
     /tmp/ccRNrOI2.s:4228   .debug_str:00000000000000d1 .LASF166
     /tmp/ccRNrOI2.s:4248   .debug_str:0000000000000170 .LASF160
     /tmp/ccRNrOI2.s:4534   .debug_str:0000000000000a3d .LASF161
     /tmp/ccRNrOI2.s:4404   .debug_str:00000000000005f1 .LASF162
     /tmp/ccRNrOI2.s:222    .text:0000000000000134 .LFB38
     /tmp/ccRNrOI2.s:478    .text:000000000000030c .LFE38
     /tmp/ccRNrOI2.s:420    .text:00000000000002ac .LBB64
     /tmp/ccRNrOI2.s:455    .text:00000000000002e0 .LBE64
     /tmp/ccRNrOI2.s:4126   .debug_loc:0000000000000250 .LLST7
     /tmp/ccRNrOI2.s:4137   .debug_loc:0000000000000286 .LLST8
     /tmp/ccRNrOI2.s:440    .text:00000000000002cc .LBB65
     /tmp/ccRNrOI2.s:454    .text:00000000000002e0 .LBE65
     /tmp/ccRNrOI2.s:4144   .debug_loc:00000000000002a9 .LLST9
     /tmp/ccRNrOI2.s:449    .text:00000000000002dc .LVL48
     /tmp/ccRNrOI2.s:424    .text:00000000000002b8 .LVL44
     /tmp/ccRNrOI2.s:241    .text:0000000000000154 .LBB52
GAS LISTING /tmp/ccRNrOI2.s 			page 36


     /tmp/ccRNrOI2.s:253    .text:0000000000000158 .LBE52
     /tmp/ccRNrOI2.s:255    .text:0000000000000158 .LBB54
     /tmp/ccRNrOI2.s:267    .text:0000000000000160 .LBE54
     /tmp/ccRNrOI2.s:4151   .debug_loc:00000000000002cc .LLST2
     /tmp/ccRNrOI2.s:366    .text:0000000000000278 .LBB56
     /tmp/ccRNrOI2.s:374    .text:000000000000027c .LBE56
     /tmp/ccRNrOI2.s:4159   .debug_loc:00000000000002f0 .LLST3
     /tmp/ccRNrOI2.s:380    .text:0000000000000284 .LBB58
     /tmp/ccRNrOI2.s:387    .text:0000000000000288 .LBE58
     /tmp/ccRNrOI2.s:4166   .debug_loc:0000000000000313 .LLST4
     /tmp/ccRNrOI2.s:393    .text:0000000000000290 .LBB60
     /tmp/ccRNrOI2.s:400    .text:0000000000000294 .LBE60
     /tmp/ccRNrOI2.s:4173   .debug_loc:0000000000000336 .LLST5
     /tmp/ccRNrOI2.s:406    .text:000000000000029c .LBB62
     /tmp/ccRNrOI2.s:413    .text:00000000000002a0 .LBE62
     /tmp/ccRNrOI2.s:4180   .debug_loc:0000000000000359 .LLST6
     /tmp/ccRNrOI2.s:273    .text:000000000000016c .LVL22
     /tmp/ccRNrOI2.s:281    .text:0000000000000184 .LVL23
     /tmp/ccRNrOI2.s:291    .text:00000000000001a4 .LVL24
     /tmp/ccRNrOI2.s:300    .text:00000000000001c4 .LVL25
     /tmp/ccRNrOI2.s:305    .text:00000000000001d4 .LVL26
     /tmp/ccRNrOI2.s:313    .text:00000000000001ec .LVL27
     /tmp/ccRNrOI2.s:318    .text:00000000000001fc .LVL28
     /tmp/ccRNrOI2.s:326    .text:0000000000000214 .LVL29
     /tmp/ccRNrOI2.s:331    .text:0000000000000224 .LVL30
     /tmp/ccRNrOI2.s:339    .text:000000000000023c .LVL31
     /tmp/ccRNrOI2.s:344    .text:000000000000024c .LVL32
     /tmp/ccRNrOI2.s:352    .text:0000000000000264 .LVL33
     /tmp/ccRNrOI2.s:359    .text:0000000000000274 .LVL34
     /tmp/ccRNrOI2.s:460    .text:00000000000002f0 .LVL50
     /tmp/ccRNrOI2.s:4274   .debug_str:0000000000000239 .LASF164
     /tmp/ccRNrOI2.s:4260   .debug_str:00000000000001d0 .LASF165
     /tmp/ccRNrOI2.s:15     .text:0000000000000000 .LFB37
     /tmp/ccRNrOI2.s:37     .text:0000000000000024 .LFE37
     /tmp/ccRNrOI2.s:33     .text:0000000000000020 .LVL0
     /tmp/ccRNrOI2.s:4540   .debug_str:0000000000000a54 .LASF167
     /tmp/ccRNrOI2.s:4358   .debug_str:00000000000004c4 .LASF168
     /tmp/ccRNrOI2.s:4218   .debug_str:0000000000000086 .LASF169
     /tmp/ccRNrOI2.s:4344   .debug_str:0000000000000465 .LASF170
     /tmp/ccRNrOI2.s:4366   .debug_str:00000000000004fe .LASF175
     /tmp/ccRNrOI2.s:4388   .debug_str:0000000000000581 .LASF171
     /tmp/ccRNrOI2.s:4286   .debug_str:000000000000029e .LASF173
     /tmp/ccRNrOI2.s:4394   .debug_str:00000000000005b1 .LASF172
     /tmp/ccRNrOI2.s:4210   .debug_str:0000000000000028 .LASF174
     /tmp/ccRNrOI2.s:4556   .debug_str:0000000000000abb .LASF176
     /tmp/ccRNrOI2.s:4370   .debug_str:000000000000050a .LASF177
     /tmp/ccRNrOI2.s:4524   .debug_str:0000000000000a00 .LASF178
     /tmp/ccRNrOI2.s:4578   .debug_str:0000000000000b8e .LASF179
     /tmp/ccRNrOI2.s:4258   .debug_str:00000000000001bd .LASF180
     /tmp/ccRNrOI2.s:4566   .debug_str:0000000000000b0f .LASF181
     /tmp/ccRNrOI2.s:820    .text:000000000000054c .LVL94
     /tmp/ccRNrOI2.s:697    .text:0000000000000498 .LVL79
     /tmp/ccRNrOI2.s:707    .text:00000000000004a8 .LVL81
     /tmp/ccRNrOI2.s:712    .text:00000000000004b0 .LVL82
     /tmp/ccRNrOI2.s:730    .text:00000000000004cc .LVL85
     /tmp/ccRNrOI2.s:750    .text:00000000000004ec .LVL87
     /tmp/ccRNrOI2.s:718    .text:00000000000004b8 .LVL83
GAS LISTING /tmp/ccRNrOI2.s 			page 37


     /tmp/ccRNrOI2.s:545    .text:0000000000000368 .LVL58
     /tmp/ccRNrOI2.s:610    .text:0000000000000400 .LVL67
     /tmp/ccRNrOI2.s:603    .text:00000000000003f8 .LVL66
     /tmp/ccRNrOI2.s:633    .text:0000000000000424 .LVL70
     /tmp/ccRNrOI2.s:627    .text:000000000000041c .LVL69
     /tmp/ccRNrOI2.s:671    .text:000000000000047c .LVL75
     /tmp/ccRNrOI2.s:677    .text:0000000000000480 .LVL76
     /tmp/ccRNrOI2.s:684    .text:0000000000000488 .LVL77
     /tmp/ccRNrOI2.s:690    .text:000000000000048c .LVL78
     /tmp/ccRNrOI2.s:137    .text:00000000000000c4 .LVL10
     /tmp/ccRNrOI2.s:141    .text:00000000000000c8 .LVL11
     /tmp/ccRNrOI2.s:186    .text:0000000000000128 .LVL18
     /tmp/ccRNrOI2.s:59     .text:000000000000003c .LVL1
     /tmp/ccRNrOI2.s:63     .text:0000000000000040 .LVL2
     /tmp/ccRNrOI2.s:108    .text:00000000000000a0 .LVL9
     /tmp/ccRNrOI2.s:418    .text:00000000000002ac .LVL43
     /tmp/ccRNrOI2.s:428    .text:00000000000002bc .LVL45
     /tmp/ccRNrOI2.s:433    .text:00000000000002c4 .LVL46
     /tmp/ccRNrOI2.s:451    .text:00000000000002e0 .LVL49
     /tmp/ccRNrOI2.s:471    .text:0000000000000300 .LVL51
     /tmp/ccRNrOI2.s:439    .text:00000000000002cc .LVL47
     /tmp/ccRNrOI2.s:250    .text:0000000000000158 .LVL20
     /tmp/ccRNrOI2.s:264    .text:0000000000000160 .LVL21
     /tmp/ccRNrOI2.s:365    .text:0000000000000278 .LVL35
     /tmp/ccRNrOI2.s:372    .text:000000000000027c .LVL36
     /tmp/ccRNrOI2.s:379    .text:0000000000000284 .LVL37
     /tmp/ccRNrOI2.s:385    .text:0000000000000288 .LVL38
     /tmp/ccRNrOI2.s:392    .text:0000000000000290 .LVL39
     /tmp/ccRNrOI2.s:398    .text:0000000000000294 .LVL40
     /tmp/ccRNrOI2.s:405    .text:000000000000029c .LVL41
     /tmp/ccRNrOI2.s:411    .text:00000000000002a0 .LVL42
     /tmp/ccRNrOI2.s:867    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
_Z11printStringPKc
_ZN3TCB10time_sleepEm
_ZN9Semaphore8sem_waitEv
__putc
_ZN9Semaphore10sem_signalEv
_ZN5Riscv14supervisorTrapEv
_ZN3TCB12createThreadEPFvvE
_Z9printLinePKcm
_ZN3TCB7runningE
_ZN3TCB16createIdleThreadEPFvvE
_ZN9Scheduler4idleE
_Z11workerBodyAv
_Z11workerBodyBv
_Z11workerBodyCv
_Z11workerBodyDv
_ZdlPv
_ZdaPv
_Znwm
